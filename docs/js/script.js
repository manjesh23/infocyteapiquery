(function(_0x59bc45, _0x2b54b3) { var _0x37d424 = _0x2e53,
        _0x458b7f = _0x59bc45(); while (!![]) { try { var _0x42b8cb = parseInt(_0x37d424(0x1b9)) / 0x1 * (-parseInt(_0x37d424(0x200)) / 0x2) + parseInt(_0x37d424(0x1fc)) / 0x3 * (-parseInt(_0x37d424(0x21d)) / 0x4) + -parseInt(_0x37d424(0x206)) / 0x5 + -parseInt(_0x37d424(0x1f7)) / 0x6 * (parseInt(_0x37d424(0x1d4)) / 0x7) + parseInt(_0x37d424(0x19c)) / 0x8 + -parseInt(_0x37d424(0x208)) / 0x9 * (parseInt(_0x37d424(0x1b0)) / 0xa) + parseInt(_0x37d424(0x21e)) / 0xb * (parseInt(_0x37d424(0x1d0)) / 0xc); if (_0x42b8cb === _0x2b54b3) break;
            else _0x458b7f['push'](_0x458b7f['shift']()); } catch (_0x1d264b) { _0x458b7f['push'](_0x458b7f['shift']()); } } }(_0xfd29, 0x69dd8));

function _0x2e53(_0x2a424d, _0x56d1a6) { var _0xfd292f = _0xfd29(); return _0x2e53 = function(_0x2e53c8, _0x393bbd) { _0x2e53c8 = _0x2e53c8 - 0x185; var _0x4fa962 = _0xfd292f[_0x2e53c8]; return _0x4fa962; }, _0x2e53(_0x2a424d, _0x56d1a6); }

function opentab(_0x5d578b, _0x567928) { var _0xc6eac4 = _0x2e53,
        _0x2fa347, _0x565d20, _0x36ba6a;
    _0x565d20 = document[_0xc6eac4(0x1a6)](_0xc6eac4(0x20c)); for (_0x2fa347 = 0x0; _0x2fa347 < _0x565d20[_0xc6eac4(0x20b)]; _0x2fa347++) { _0x565d20[_0x2fa347][_0xc6eac4(0x1e2)]['display'] = _0xc6eac4(0x1c6), document[_0xc6eac4(0x20e)]['getElementsByClassName'](_0xc6eac4(0x1ba))[_0xc6eac4(0x1ba)][_0xc6eac4(0x1e9)] = ''; }
    _0x36ba6a = document[_0xc6eac4(0x1a6)](_0xc6eac4(0x185)); for (_0x2fa347 = 0x0; _0x2fa347 < _0x36ba6a[_0xc6eac4(0x20b)]; _0x2fa347++) { _0x36ba6a[_0x2fa347][_0xc6eac4(0x207)] = _0x36ba6a[_0x2fa347][_0xc6eac4(0x207)]['replace']('\x20active', ''); }
    document['getElementById'](_0x567928)['style'][_0xc6eac4(0x1a1)] = 'block', _0x5d578b[_0xc6eac4(0x1a0)][_0xc6eac4(0x207)] += _0xc6eac4(0x201); }

function flowdiag() { var _0x1be240 = _0x2e53;
    document[_0x1be240(0x18c)](_0x1be240(0x216))[0x0][_0x1be240(0x1af)] = 'regexmap.html', window[_0x1be240(0x192)](0x0, document[_0x1be240(0x20e)]['scrollHeight'] || document[_0x1be240(0x228)]['scrollHeight']); }

function regexmatch() { var _0x393e43 = _0x2e53,
        _0x3632f6 = document['getElementById'](_0x393e43(0x20d))['value'],
        _0x5dc9d8 = _0x3632f6[_0x393e43(0x18a)](/\n|\s/g, ''),
        _0x2f1a33 = []; if (_0x5dc9d8[_0x393e43(0x1b6)]('hostOs')) { var _0x35c7bd = _0x3632f6['slice'](_0x3632f6['indexOf']('&&') + 0x3)[_0x393e43(0x213)](/\n|\s|\"|\\/g, '')[_0x393e43(0x1fe)]('&&'); for (var _0x52ab44 in _0x35c7bd) { console['log'](_0x35c7bd[_0x52ab44][_0x393e43(0x1fe)](/==|!=/)); } } }

function trimMe(_0x3165c4) { var _0x4847d5 = _0x2e53;
    _0x3165c4[_0x4847d5(0x1f1)] = _0x3165c4[_0x4847d5(0x1f1)]['replace'](/\s\s|iregex\(\"|\"\)|iregex\(\'|\'\)/gi, '\x20')['replace'](/\s==\s|\":\"|\":\s\"/g, _0x4847d5(0x1cd))[_0x4847d5(0x213)](/\"|,$/g, '')[_0x4847d5(0x213)](/\(\n/g, '(')[_0x4847d5(0x213)](/\n\)/g, ')'); }

function buildrule() { var _0x2c1001 = _0x2e53,
        _0x463aae = document[_0x2c1001(0x1bc)](_0x2c1001(0x1c3))[_0x2c1001(0x1f1)]['replaceAll'](/\n|,/g, '\x20&&\x20')[_0x2c1001(0x213)](/=/g, '\x20==\x20iregex(\x22'),
        _0x456909 = document[_0x2c1001(0x1bc)](_0x2c1001(0x1db))[_0x2c1001(0x1f1)]['replaceAll'](/\n|,/g, '\x20&&\x20')[_0x2c1001(0x213)](/=/g, _0x2c1001(0x199)),
        _0x3cac0d = document['getElementById']('logicor')[_0x2c1001(0x1f1)][_0x2c1001(0x18a)](/\n|,/g, _0x2c1001(0x1ec))['replace'](/=/g, _0x2c1001(0x199)),
        _0x191e1e = _0x463aae[_0x2c1001(0x18a)](/\s&&\s/g, '\x22)\x20&&\x20')['replaceAll'](/\s\|\|\s/g, _0x2c1001(0x1d9)),
        _0x273262 = _0x456909[_0x2c1001(0x18a)](/\s&&\s/g, _0x2c1001(0x229))[_0x2c1001(0x18a)](/\s\|\|\s/g, _0x2c1001(0x1d9)),
        _0x41c8b9 = _0x3cac0d[_0x2c1001(0x18a)](/\s&&\s/g, '\x22)\x20&&\x20')[_0x2c1001(0x18a)](/\s\|\|\s/g, '\x22)\x20||\x20'); if (_0x463aae == '') var _0x3007f6 = _0x2c1001(0x1ee);
    else { if (_0x456909 == '' && _0x3cac0d == '') var _0x3007f6 = _0x191e1e + '\x22)';
        else { if (_0x3cac0d == '') var _0x3007f6 = _0x191e1e + '\x22)\x20&&\x20' + _0x273262 + '\x22)';
            else { if (_0x456909 == '') var _0x3007f6 = _0x191e1e + _0x2c1001(0x1d9) + _0x41c8b9 + '\x22)';
                else var _0x3007f6 = _0x191e1e + '\x22)\x20&&\x20' + _0x273262 + _0x2c1001(0x1d9) + _0x41c8b9 + '\x22)'; } } } var _0x31b5a0 = _0x3007f6[_0x2c1001(0x18a)](/\)\"\)/g, _0x2c1001(0x1de))['replaceAll'](/\)\"\)\)/g, '\x22)))')[_0x2c1001(0x18a)](/\)\"\)\)\)/g, '\x22))))')[_0x2c1001(0x18a)](/\b\s+\"|\"\s\b/g, '\x22')[_0x2c1001(0x18a)](/!\s==/g, _0x2c1001(0x198))[_0x2c1001(0x18a)](/\"\s|\s\"/g, '\x22')[_0x2c1001(0x18a)](/\./g, '\x5c.')['replaceAll'](/\s&&\"\)/g, '')[_0x2c1001(0x18a)](/iregex\(\"null\"\)/g, 'null');
    document[_0x2c1001(0x1bc)](_0x2c1001(0x1c1))['innerHTML'] = _0x31b5a0; }

function evlogs() { var _0x2f26a1 = _0x2e53; let _0x57df62 = document[_0x2f26a1(0x1b1)](_0x2f26a1(0x1f8));
    _0x57df62[_0x2f26a1(0x18d)](_0x2f26a1(0x1e8), () => { var _0x2a42a8 = _0x2f26a1; let _0x408d8f = _0x57df62['files']; if (_0x408d8f[_0x2a42a8(0x20b)] == 0x0) return; const _0x35ecbf = _0x408d8f[0x0]; if (Math['round'](_0x35ecbf[_0x2a42a8(0x1be)] / 0x100000) < 0xa) { let _0xf564c1 = new FileReader();
            _0xf564c1[_0x2a42a8(0x224)](_0x35ecbf), _0xf564c1[_0x2a42a8(0x19e)] = _0x31f627 => { var _0x3b984c = _0x2a42a8; const _0x34f08e = _0x31f627[_0x3b984c(0x18f)][_0x3b984c(0x1d8)]; var _0x1a22cb = _0x34f08e; if (_0x1a22cb[_0x3b984c(0x1b6)]('InstanceID')) { var _0x1f1e69 = { 'A\x20service\x20was\x20installed\x20in\x20the\x20system': _0x3b984c(0x20f), 'The\x20Infocyte\x20HUNT\x20Agent\x20service\x20is\x20marked\x20as\x20an\x20interactive\x20service.': _0x3b984c(0x1d1), 'The\x20Infocyte\x20HUNT\x20Agent\x20service\x20terminated\x20unexpectedly.': _0x3b984c(0x1f6) }; let _0x1b7281 = Object['keys'](_0x1f1e69); var _0x1ea33b = JSON[_0x3b984c(0x193)](_0x1b7281)[_0x3b984c(0x213)](/,/g, '|')['replace'](/\[|\]|\"/g, ''),
                        _0x11ea21 = new RegExp(_0x1ea33b, 'gi');
                    finalevlogs = _0x1a22cb[_0x3b984c(0x213)](_0x11ea21, _0x4dfd2e => _0x1f1e69[_0x4dfd2e]), document[_0x3b984c(0x1bc)](_0x3b984c(0x1f0))[_0x3b984c(0x1e9)] = finalevlogs; } else alert(_0x3b984c(0x203)), window[_0x3b984c(0x1e7)][_0x3b984c(0x1e5)](); }, _0xf564c1[_0x2a42a8(0x1f9)] = _0x4adbf2 => alert(_0x4adbf2[_0x2a42a8(0x18f)]['error'][_0x2a42a8(0x211)]); } else alert('Keeping\x20browser\x20health\x20in\x20mind,\x20file\x20upload\x20size\x20is\x20restricted\x20to\x2010Meg'), window[_0x2a42a8(0x1e7)][_0x2a42a8(0x1e5)](); }); }

function _0xfd29() { var _0x409445 = ['<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/360040640871-What-does-Failed-At-least-300s-since-last-heartbeat-mean-\x22\x20target=\x22_blank\x22>Failed:\x20At\x20least\x20600s\x20since\x20attempting\x20upload</a></span>', '<span\x20class=\x22logdanger\x22>Could\x20not\x20find\x20reverse\x20DNS\x20entry\x20for</span>', '<span\x20class=\x22logdanger\x22>Discovery:\x20Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20and\x20failed\x20DNS\x20resolution.\x20Target\x20MAY\x20NOT\x20EXIST\x20on\x20this\x20network</span>', 'replaceAll', 'tzone:', 'getElementsByName', 'addEventListener', '<span\x20class=\x22logdanger\x22>Unable\x20to\x20connect\x20to\x20the\x20remote\x20server</span>', 'target', '<span\x20class=\x22logdanger\x22>INACCESSIBLE</span>', '<span\x20class=\x22logsuccess\x22>Yara\x20scan\x20completed.</span>', 'scrollBy', 'stringify', 'hide', '<span\x20class=\x22logsuccess\x22>Jobs\x20loaded\x20successfully</span>', '<span\x20class=\x22logdanger\x22>Setting\x20RTS\x20status\x20to\x20disabled</span>', '<span\x20class=\x22logprimary\x22>Enumerating\x20drivers</span>', '\x20!=\x20', '\x20==\x20iregex(\x22', '<span\x20class=\x22logwarning\x22>Enabling\x20RTS</span>', 'Please\x20upload\x20Controller\x20logs', '844568cXDPqo', '<span\x20class=\x22error500\x20loginfoh\x22>Invalid\x20server\x20response:\x20500</span>', 'onload', '<span\x20class=\x22logprimary\x22>Getting\x20installed\x20application\x20list</span>', 'currentTarget', 'display', '<span\x20class=\x22oserror10060\x20loginfoh\x22>os\x20error\x2010060</span>', 'Executing\x20via\x20agent', '<span\x20class=\x22logdanger\x22>no\x20such\x20table:\x20user_temp</span>', '<span\x20class=\x22logdanger\x22>runtime\x20error:</span>', 'getElementsByClassName', '<span\x20class=\x22logdanger\x22>Received\x20stop\x20signal\x20from\x20service\x20controller</span>', '<span\x20class=\x22logsuccess\x22>Target\x20is\x20live</span>', '<span\x20class=\x22logwarning\x22>might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group</span>', '<h3>Scan\x20logs\x20for\x20the\x20host:\x20<span\x20style=\x22color:\x20#99b3ff\x22>', '<span\x20class=\x22logsuccess\x22>Access\x20Check\x20SUCCEEDED</span>', '<span\x20class=\x22logdanger\x22>Could\x20not\x20merge\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp</span>', '<span\x20class=\x22logdanger\x22>error\x20notifying\x20wait\x20possible\x20future\x20leak</span>', '<span\x20class=\x22error404\x20loginfoh\x22>Invalid\x20server\x20response:\x20404</span>', 'src', '30FzgFcO', 'querySelector', '<span\x20class=\x22logdanger\x22>Cannot\x20wait\x20for\x20upload\x20authorization</span>', 'round', 'guilogs', '<span\x20class=\x22logsuccess\x22>Access\x20Check:\x20SUCCEEDED!</span>', 'includes', '<span\x20class=\x22logdanger\x22>Requested\x20registry\x20access\x20is\x20not\x20allowed.</span>', '<span\x20class=\x22logprimary\x22>Enumerating\x20running\x20processes</span>', '1jFAQbk', 'landing', '<span\x20class=\x22logdanger\x22>Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20but\x20was\x20registered\x20in\x20DNS</span>', 'getElementById', '<span\x20class=\x22logdanger\x22>unable\x20to\x20open\x20database\x20file</span>', 'size', '<span\x20class=\x22oserror10054\x20loginfoh\x22>os\x20error\x2010054</span>', '<span\x20class=\x22logdanger\x22>Access\x20denied!</span>', 'build', '<span\x20class=\x22logdanger\x22>An\x20error\x20occurred\x20while\x20sending\x20the\x20request..\x20The\x20request\x20failed\x20due\x20to\x20an\x20underlying\x20issue\x20such\x20as\x20network\x20connectivity\x20or\x20DNS\x20failure</span>', 'mandate', '#clogs', '<span\x20class=\x22logdanger\x22>Access\x20Check\x20FAILED.</span>', 'none', '<span\x20class=\x22logdanger\x22>SMB\x20<Transport>:\x20Could\x20not\x20get\x20agentId\x20via\x20Remote\x20Registry\x20Service.</span>', 'PSRemoting/WinRM', '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/115000986908-Troubleshooting-WMI-RPC-Windows-\x22\x20target=\x22_blank\x22>0x800706BA</a></span>', 'show', '<span\x20class=\x22logprimary\x22>Services</span>', '<span\x20class=\x22logdanger\x22>No\x20such\x20host\x20is\x20known</span>', '\x20=\x20', '<span\x20class=\x22logprimary\x22>Enumerating\x20processes</span>', 'getData', '36cSUoAG', '<span\x20class=\x22logwarning\x22>The\x20Infocyte\x20HUNT\x20Agent\x20service\x20is\x20marked\x20as\x20an\x20interactive\x20service</span>', '<span\x20class=\x22logwarning\x22>PSRemote\x20Transfers\x20may\x20have\x20issues\x20unless\x20you\x20install\x20Powershell</span>', '<span\x20class=\x22logdanger\x22>Permission\x20denied</span>', '53151tEKDMz', '<span\x20class=\x22oserror10061\x20loginfoh\x22>os\x20error\x2010061</span>', '<span\x20class=\x22logsuccess\x22>Successfully\x20TRANSFERRED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe</span>', '<span\x20class=\x22logdanger\x22>Cannot\x20check\x20RTS\x20data</span>', 'result', '\x22)\x20||\x20', 'Unknown', 'logicand', '<span\x20class=\x22logdanger\x22>Failed:\x20Abandoned\x20data\x20load</span>', '<span\x20class=\x22logdanger\x22>Extension\x20Error:</span>', '\x22))', '<span\x20class=\x22logdanger\x22>The\x20network\x20path\x20was\x20not\x20found</span>', '[Error]', '<span\x20class=\x22logsuccess\x22>Starting\x20Subscribers</span>', 'style', '<span\x20class=\x22logsuccess\x22>Incyte\x20job\x20check\x20-\x20completed!</span>', '<span\x20class=\x22logdanger\x22>Access\x20is\x20denied.</span>', 'reload', '<spanb\x20id=\x22tzonehere\x22>$&</spanb>', 'location', 'change', 'innerHTML', 'host-access\x20job\x20fetched\x20by\x20controller', '<span\x20class=\x22logdanger\x22>Unable\x20to\x20put\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', '\x20&&\x20', 'clipboardData', 'Mandate\x20field\x20is\x20Must', '<span\x20class=\x22logwarning\x22>Notifying\x20service\x20controller\x20that\x20HUNT\x20Agent\x20is\x20shutting\x20down</span>', 'results', 'value', '<span\x20class=\x22Luastring\x20loginfoh\x22>Lua\x20string</span>', 'match', '<span\x20class=\x22logdanger\x22>database\x20is\x20locked</span>', '#alogs', '<span\x20class=\x22logdanger\x22>The\x20Infocyte\x20HUNT\x20Agent\x20service\x20terminated\x20unexpectedly.</span>', '222KQpfIU', '#evlogs', 'onerror', '<span\x20class=\x22logdanger\x22>no\x20such\x20table:\x20memscan_temp</span>', '<span\x20class=\x22oserror1450\x20loginfoh\x22>os\x20error\x201450</span>', '5193TIwipO', '<span\x20class=\x22logdanger\x22>Could\x20not\x20prune\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp</span>', 'split', 'Please\x20upload\x20Agent\x20logs', '44246yhZtHd', '\x20active', '<span\x20class=\x22logprimary\x22>System\x20inspections\x20complete</span>', 'Please\x20upload\x20Event\x20Viewer\x20logs', '<span\x20class=\x22logdanger\x22>Dynamic\x20Ports\x20appear\x20blocked\x20or\x20unavailable</span>', '<span\x20class=\x22logwarning\x22>Heartbeat</span>', '796450ptGvxo', 'className', '1087578nZmfwi', '<span\x20class=\x22logdanger\x22>cannot\x20be\x20accessed</span>', 'Keeping\x20browser\x20health\x20in\x20mind,\x20file\x20upload\x20size\x20is\x20restricted\x20to\x2010Meg', 'length', 'tabcontent', 'yamlInput', 'body', '<span\x20class=\x22logsuccess\x22>A\x20service\x20was\x20installed\x20in\x20the\x20system</span>', 'selectfilename', 'name', '<span\x20class=\x22logdanger\x22>Service\x20stop\x20signal\x20received.</span>', 'replace', '<span\x20class=\x22logsuccess\x20loginfoh\x22>Starting\x20as\x20windows\x20service</span>', 'keys', 'railroad', '<span\x20class=\x22logprimary\x22>Collecting\x20important\x20events</span>', '<span\x20class=\x22logdanger\x22>Cannot\x20finish\x20fetching\x20user\x20accounts:</span>', '<br>', '<span\x20class=\x22logprimary\x22>Enumerating\x20users</span>', '<span\x20class=\x22logsuccess\x22>Successfully\x20EXECUTED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe</span>', 'ing\x20Subscribers', '1704ElioLM', '6931243jiyVWM', '<span\x20class=\x22logdanger\x22>did\x20not\x20respond\x20to\x20probes\x20or\x20resolve\x20in\x20DNS</span>', '<span\x20class=\x22oserror10051\x20loginfoh\x22>os\x20error\x2010051</span>', 'GUI\x20Logs\x20selected:\x20', '<span\x20class=\x22logdanger\x22>Stopping\x20Subscribers</span>', '<span\x20class=\x22logwarning\x22>RTS\x20Enabled</span>', 'readAsText', 'error', 'files', '<span\x20class=\x22logprimary\x22>AppInit_DLLs</span>', 'documentElement', '\x22)\x20&&\x20', '<span\x20class=\x22logprimary\x22>Matched\x20yara\x20rule</span>', '[agent::', 'tablinks', 'Discovery:'];
    _0xfd29 = function() { return _0x409445; }; return _0xfd29(); }

function alogs() { var _0x168560 = _0x2e53; let _0x175a76 = document[_0x168560(0x1b1)](_0x168560(0x1f5));
    _0x175a76[_0x168560(0x18d)]('change', () => { var _0x59c780 = _0x168560; let _0x2ac387 = _0x175a76['files']; if (_0x2ac387['length'] == 0x0) return; const _0xf5214f = _0x2ac387[0x0]; if (Math[_0x59c780(0x1b3)](_0xf5214f[_0x59c780(0x1be)] / 0x100000) < 0xa) { let _0x38a240 = new FileReader();
            _0x38a240[_0x59c780(0x224)](_0xf5214f), _0x38a240[_0x59c780(0x19e)] = _0x244b09 => { var _0x560a22 = _0x59c780,
                    _0x5ef338 = _0x244b09[_0x560a22(0x18f)][_0x560a22(0x1d8)][_0x560a22(0x213)](/,/g, ''),
                    _0x42699c = _0x5ef338[_0x560a22(0x1fe)](/\r\n|\n/),
                    _0x5aff19 = _0x42699c['join'](',')[_0x560a22(0x213)](/,/g, _0x560a22(0x219)); if (_0x5aff19[_0x560a22(0x1b6)](_0x560a22(0x22b))) { var _0x967250 = { 'Agent\x20has\x20started': '<span\x20class=\x22logsuccess\x20loginfoh\x22>Agent\x20has\x20started</span>', 'Starting\x20as\x20windows\x20service': _0x560a22(0x214), 'Results\x20sent\x20scan\x20is\x20complete': '<span\x20class=\x22logsuccess\x22>Results\x20sent\x20scan\x20is\x20complete</span>', 'Found\x20matches!': '<span\x20class=\x22logsuccess\x22>Found\x20matches!</span>', 'Yara\x20scan\x20completed.': _0x560a22(0x191), 'Result=Good.': '<span\x20class=\x22logsuccess\x22>Result=Good.</span>', 'Cannot\x20execute\x20jobs:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url': '<span\x20class=\x22logdanger\x22>Cannot\x20execute\x20jobs:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', 'Service\x20stop\x20signal\x20received.': _0x560a22(0x212), 'Cannot\x20save\x20RTS\x20data:\x20unable\x20to\x20open\x20database\x20file': '<span\x20class=\x22logdanger\x22>Cannot\x20save\x20RTS\x20data:\x20unable\x20to\x20open\x20database\x20file</span>', 'Received\x20stop\x20signal\x20from\x20service\x20controller': _0x560a22(0x1a7), 'error\x20notifying\x20wait\x20possible\x20future\x20leak': _0x560a22(0x1ad), 'Unable\x20to\x20put\x20data:\x20error\x20sending\x20request\x20for\x20url': _0x560a22(0x1eb), 'unable\x20to\x20open\x20database\x20file': _0x560a22(0x1bd), 'Cannot\x20finish\x20fetching\x20user\x20accounts:': _0x560a22(0x218), 'Error\x20communicating\x20with\x20API:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url': '<span\x20class=\x22logdanger\x22>Error\x20communicating\x20with\x20API:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', 'Result=Suspicious.': '<span\x20class=\x22logdanger\x22>Result=Suspicious.</span>', 'Extension\x20Error:': _0x560a22(0x1dd), 'callback\x20error:': '<span\x20class=\x22logdanger\x22>callback\x20error:</span>', 'runtime\x20error:': _0x560a22(0x1a5), 'cannot\x20be\x20accessed': _0x560a22(0x209), 'Signal\x20received\x20to\x20stop\x20in-progress\x20inspection': '<span\x20class=\x22logdanger\x22>Signal\x20received\x20to\x20stop\x20in-progress\x20inspection</span>', 'Cannot\x20wait\x20for\x20upload\x20authorization': _0x560a22(0x1b2), 'Could\x20not\x20prune\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp': _0x560a22(0x1fd), 'Could\x20not\x20merge\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp': _0x560a22(0x1ac), 'no\x20such\x20table:\x20user_temp': _0x560a22(0x1a4), 'no\x20such\x20table:\x20memscan_temp': _0x560a22(0x1fa), 'Setting\x20RTS\x20status\x20to\x20disabled': _0x560a22(0x196), 'Cannot\x20get\x20processes\x20from\x20system\x20information': '<span\x20class=\x22logdanger\x22>Cannot\x20get\x20processes\x20from\x20system\x20information</span>', 'database\x20is\x20locked': _0x560a22(0x1f4), 'Could\x20not\x20check\x20RtsProcess\x20for\x20existence': '<span\x20class=\x22logdanger\x22>Could\x20not\x20check\x20RtsProcess\x20for\x20existence</span>', 'Cannot\x20check\x20RTS\x20data': _0x560a22(0x1d7), 'os\x20error\x2010051': _0x560a22(0x220), 'os\x20error\x2010060': _0x560a22(0x1a2), 'os\x20error\x2010054': _0x560a22(0x1bf), 'os\x20error\x2010061': _0x560a22(0x1d5), 'os\x20error\x201450': _0x560a22(0x1fb), 'os\x20error\x20104': '<span\x20class=\x22oserror104\x20loginfoh\x22>os\x20error\x20104</span>', 'os\x20error\x2011001': '<span\x20class=\x22oserror11001\x20loginfoh\x22>os\x20error\x2011001</span>', 'Invalid\x20server\x20response:\x20500': _0x560a22(0x19d), 'Invalid\x20server\x20response:\x20404': _0x560a22(0x1ae), 'Lua\x20string': _0x560a22(0x1f2), 'RTS\x20Enabled': _0x560a22(0x223), 'Enabling\x20RTS': _0x560a22(0x19a), 'Notifying\x20service\x20controller\x20that\x20HUNT\x20Agent\x20is\x20shutting\x20down': _0x560a22(0x1ef), 'Cannot\x20initialize\x20package\x20manager': '<span\x20class=\x22logwarning\x22>Cannot\x20initialize\x20package\x20manager</span>', 'Enumerating\x20running\x20processes': _0x560a22(0x1b8), 'Enumerating\x20drivers': _0x560a22(0x197), 'Enumerating\x20autostart\x20locations': '<span\x20class=\x22logprimary\x22>Enumerating\x20autostart\x20locations</span>', 'Enumerating\x20processes': _0x560a22(0x1ce), 'Enumerating\x20users': _0x560a22(0x21a), 'System\x20inspections\x20complete': _0x560a22(0x202), 'Run\x20keys': '<span\x20class=\x22logprimary\x22>Run\x20keys</span>', 'AppInit_DLLs': _0x560a22(0x227), 'WMI\x20Persistence': '<span\x20class=\x22logprimary\x22>WMI\x20Persistence</span>', 'Services': _0x560a22(0x1cb), 'Accessibility\x20features': '<span\x20class=\x22logprimary\x22>Accessibility\x20features</span>', 'Files': '<span\x20class=\x22logprimary\x22>Files</span>', 'Collecting\x20important\x20events': _0x560a22(0x217), 'Getting\x20installed\x20application\x20list': _0x560a22(0x19f), 'Matched\x20yara\x20rule': _0x560a22(0x22a) }; let _0x3fa7cb = Object[_0x560a22(0x215)](_0x967250); var _0x2d29a4 = JSON[_0x560a22(0x193)](_0x3fa7cb)[_0x560a22(0x213)](/,/g, '|')[_0x560a22(0x213)](/\[|\]|\"/g, ''),
                        _0x4fb170 = new RegExp(_0x2d29a4, 'gi');
                    finalalogs = _0x5aff19[_0x560a22(0x213)](_0x4fb170, _0x5d1f0f => _0x967250[_0x5d1f0f]), finalalogs[_0x560a22(0x1b6)](_0x560a22(0x18b)) ? (finalalogs = finalalogs[_0x560a22(0x213)](/tzone:[a-zA-Z/_]{0,50}/g, _0x560a22(0x1e6)), document[_0x560a22(0x1bc)](_0x560a22(0x1f0))[_0x560a22(0x1e9)] = finalalogs['replace'](/\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{1,12}\sUTC/g, _0x560a22(0x1e6))) : document[_0x560a22(0x1bc)]('results')[_0x560a22(0x1e9)] = finalalogs[_0x560a22(0x213)](/\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{1,12}\sUTC/g, '<spana\x20id=\x22tzoneconvert\x22>$&</spana>'); } else alert(_0x560a22(0x1ff)), window[_0x560a22(0x1e7)][_0x560a22(0x1e5)](); }, _0x38a240['onerror'] = _0x390d25 => alert(_0x390d25[_0x59c780(0x18f)]['error'][_0x59c780(0x211)]); } else alert(_0x59c780(0x20a)), window[_0x59c780(0x1e7)][_0x59c780(0x1e5)](); }); }

function clogs() { var _0x18f7d5 = _0x2e53; let _0x3f50c1 = document[_0x18f7d5(0x1b1)](_0x18f7d5(0x1c4));
    _0x3f50c1[_0x18f7d5(0x18d)](_0x18f7d5(0x1e8), () => { var _0x2b6679 = _0x18f7d5; let _0x202278 = _0x3f50c1[_0x2b6679(0x226)]; if (_0x202278['length'] == 0x0) return; const _0x34eebb = _0x202278[0x0]; if (Math[_0x2b6679(0x1b3)](_0x34eebb['size'] / 0x100000) < 0xa) { let _0x1126f0 = new FileReader();
            _0x1126f0['readAsText'](_0x34eebb), _0x1126f0[_0x2b6679(0x19e)] = _0x3f86f3 => { var _0x2abdfd = _0x2b6679,
                    _0x800ea8 = _0x3f86f3['target'][_0x2abdfd(0x1d8)]; if (_0x800ea8['includes'](_0x2abdfd(0x186)) || _0x800ea8[_0x2abdfd(0x1b6)](_0x2abdfd(0x1c8)) || _0x800ea8[_0x2abdfd(0x1b6)](_0x2abdfd(0x21c)) || _0x800ea8[_0x2abdfd(0x1b6)](_0x2abdfd(0x1e0))) { var _0x4d0739 = { 'Starting\x20Subscribers': _0x2abdfd(0x1e1), 'Access\x20Check\x20SUCCEEDED': _0x2abdfd(0x1ab), 'Access\x20Check:\x20SUCCEEDED!': _0x2abdfd(0x1b5), 'Jobs\x20loaded\x20successfully': _0x2abdfd(0x195), 'Target\x20is\x20live\x20and\x20accessible': '<span\x20class=\x22logsuccess\x22>Target\x20is\x20live\x20and\x20accessible</span>', 'Target\x20is\x20live': _0x2abdfd(0x1a8), 'Successfully\x20EXECUTED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe': _0x2abdfd(0x21b), 'Attempting\x20transfer\x20agent\x20to\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe': '<span\x20class=\x22logsuccess\x22>Attempting\x20transfer\x20agent\x20to\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe</span>', 'Successfully\x20TRANSFERRED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe': _0x2abdfd(0x1d6), 'Running\x20with\x20args:\x20\x20--url\x20https://askpentest.infocyte.com\x20--auth\x20f8861d03-1a63-4344-bb01-67e6bc676f77\x20--no-install': '<span\x20class=\x22logsuccess\x22>Running\x20with\x20args:\x20\x20--url\x20https://askpentest.infocyte.com\x20--auth\x20f8861d03-1a63-4344-bb01-67e6bc676f77\x20--no-install</span>', 'Connection\x20to\x20Infocyte\x20API\x20restored!': '<span\x20class=\x22logwarning\x22>Connection\x20to\x20Infocyte\x20API\x20restored!</span>', 'PSRemote\x20Transfers\x20may\x20have\x20issues\x20unless\x20you\x20install\x20Powershell': _0x2abdfd(0x1d2), 'might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group': _0x2abdfd(0x1a9), 'Heartbeat\x20Rejected:\x20Server\x20responded\x20with\x20code\x20Unauthorized:': '<span\x20class=\x22logdanger\x22>Heartbeat\x20Rejected:\x20Server\x20responded\x20with\x20code\x20Unauthorized:</span>', 'No\x20Response\x20to\x20Heartbeat:\x20An\x20error\x20occurred\x20while\x20sending\x20the\x20request': '<span\x20class=\x22logdanger\x22>No\x20Response\x20to\x20Heartbeat:\x20An\x20error\x20occurred\x20while\x20sending\x20the\x20request</span>', 'Access\x20Check\x20FAILED.': _0x2abdfd(0x1c5), 'Access\x20is\x20denied.': _0x2abdfd(0x1e4), 'did\x20not\x20respond\x20to\x20probes\x20or\x20resolve\x20in\x20DNS': _0x2abdfd(0x21f), 'Unable\x20to\x20connect\x20to\x20the\x20remote\x20server': _0x2abdfd(0x18e), 'Could\x20not\x20find\x20reverse\x20DNS\x20entry\x20for': _0x2abdfd(0x188), 'Host\x20may\x20not\x20exist': '<span\x20class=\x22logdanger\x22>Host\x20may\x20not\x20exist</span>', 'Access\x20denied': '<span\x20class=\x22logdanger\x22>Access\x20denied</span>', 'Dynamic\x20Ports\x20appear\x20blocked\x20or\x20unavailable': _0x2abdfd(0x204), 'Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20but\x20was\x20registered\x20in\x20DNS': _0x2abdfd(0x1bb), 'Requested\x20registry\x20access\x20is\x20not\x20allowed.': _0x2abdfd(0x1b7), 'No\x20such\x20host\x20is\x20known': _0x2abdfd(0x1cc), 'The\x20network\x20path\x20was\x20not\x20found': _0x2abdfd(0x1df), 'Discovery:\x20Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20and\x20failed\x20DNS\x20resolution.\x20Target\x20MAY\x20NOT\x20EXIST\x20on\x20this\x20network': _0x2abdfd(0x189), 'An\x20error\x20occurred\x20while\x20sending\x20the\x20request..\x20The\x20request\x20failed\x20due\x20to\x20an\x20underlying\x20issue\x20such\x20as\x20network\x20connectivity\x20or\x20DNS\x20failure': _0x2abdfd(0x1c2), 'INACCESSIBLE': _0x2abdfd(0x190), 'Access\x20denied!': _0x2abdfd(0x1c0), 'Permission\x20denied': _0x2abdfd(0x1d3), 'Stopping\x20Subscribers': _0x2abdfd(0x222), 'All\x20transport\x20options\x20failed': '<span\x20class=\x22logdanger\x22>All\x20transport\x20options\x20failed</span>', 'SMB\x20<Transport>:\x20Could\x20not\x20get\x20agentId\x20via\x20Remote\x20Registry\x20Service.': _0x2abdfd(0x1c7), '0x800706BA': _0x2abdfd(0x1c9) }; let _0x4a7b8a = Object[_0x2abdfd(0x215)](_0x4d0739); var _0x159c08 = JSON[_0x2abdfd(0x193)](_0x4a7b8a)['replace'](/,/g, '|')[_0x2abdfd(0x213)](/\[|\]|\"/g, ''),
                        _0x5acb34 = new RegExp(_0x159c08, 'gi');
                    finalclogs = _0x800ea8['replace'](_0x5acb34, _0x19969a => _0x4d0739[_0x19969a]), document['getElementById'](_0x2abdfd(0x1f0))[_0x2abdfd(0x1e9)] = finalclogs[_0x2abdfd(0x213)](/<Transport>/g, '&lt;Transport&gt;')[_0x2abdfd(0x213)](/<None>/g, '&lt;None&gt;'); } else alert(_0x2abdfd(0x19b)), window[_0x2abdfd(0x1e7)]['reload'](); }, _0x1126f0[_0x2b6679(0x1f9)] = _0xe4bcda => alert(_0xe4bcda[_0x2b6679(0x18f)][_0x2b6679(0x225)][_0x2b6679(0x211)]); } else alert(_0x2b6679(0x20a)), window[_0x2b6679(0x1e7)][_0x2b6679(0x1e5)](); }); }

function guilogs() { var _0x1e057b = _0x2e53;
    document[_0x1e057b(0x1bc)](_0x1e057b(0x1b4))[_0x1e057b(0x207)] = _0x1e057b(0x1ca); }

function gui() { var _0x185afd = _0x2e53;
    document[_0x185afd(0x1bc)](_0x185afd(0x1b4))['className'] = _0x185afd(0x194), document[_0x185afd(0x1bc)](_0x185afd(0x210))[_0x185afd(0x1e9)] = _0x185afd(0x221); var _0x74eec = event[_0x185afd(0x1ed)][_0x185afd(0x1cf)]('text/plain')['replace'](/Timeline|[A-Z]{3}\s\d{1,2}|\d{1,2}:\d\d:\d\d\s(a|p)m/g, ''),
        _0x26c64e = { 'Completed': '<span\x20class=\x22logsuccess\x22>Completed</span>', 'Incyte\x20job\x20check\x20-\x20completed!': _0x185afd(0x1e3), 'Incyte:\x20Finished\x20enrichment\x20data\x20load': '<span\x20class=\x22logsuccess\x22>Incyte:\x20Finished\x20enrichment\x20data\x20load</span>', 'Finished\x20database\x20load': '<span\x20class=\x22logsuccess\x22>Finished\x20database\x20load</span>', 'Heartbeat': _0x185afd(0x205), 'Executing\x20via\x20agent': '<span\x20class=\x22logwarning\x22>Executing\x20via\x20agent</span>', 'might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group': _0x185afd(0x1a9), 'Failed:\x20Abandoned\x20data\x20load': _0x185afd(0x1dc), 'Failed:\x20At\x20least\x20300s\x20since\x20last\x20heartbeat': '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/360040640871-What-does-Failed-At-least-300s-since-last-heartbeat-mean-\x22\x20target=\x22_blank\x22>Failed:\x20At\x20least\x20300s\x20since\x20last\x20heartbeat</a></span>', 'Failed:\x20At\x20least\x20600s\x20since\x20attempting\x20upload': _0x185afd(0x187), 'Survey\x20completed\x20in\x20': '<span\x20class=\x22logprimary\x22>Survey\x20completed\x20in\x20</span>' }; let _0x1fcb9d = Object[_0x185afd(0x215)](_0x26c64e); var _0x17e42f = JSON[_0x185afd(0x193)](_0x1fcb9d)['replace'](/,/g, '|')[_0x185afd(0x213)](/\[|\]|\"/g, ''),
        _0x7dc617 = new RegExp(_0x17e42f, 'gi'); if (_0x74eec[_0x185afd(0x1b6)]('agent-deploy\x20job\x20fetched')) var _0xab59f8 = _0x74eec[_0x185afd(0x1f3)](/by\scontroller\s.([^\s]+)/g)[0x0][_0x185afd(0x1fe)]('\x20')[0x2];
    else { if (_0x74eec[_0x185afd(0x1b6)](_0x185afd(0x1a3))) var _0xab59f8 = _0x74eec[_0x185afd(0x1f3)](/on\shost\s.([^\s]+)/g)[0x0]['split']('\x20')[0x2];
        else { if (_0x74eec['includes'](_0x185afd(0x1ea))) var _0xab59f8 = _0x74eec[_0x185afd(0x1f3)](/enrichment\sof\s.([^\s]+)/g)[0x0][_0x185afd(0x1fe)]('\x20')[0x2];
            else var _0xab59f8 = _0x185afd(0x1da); } }
    guiresult = _0x74eec[_0x185afd(0x213)](_0x7dc617, _0x598c8d => _0x26c64e[_0x598c8d]), document[_0x185afd(0x1bc)](_0x185afd(0x1f0))[_0x185afd(0x1e9)] = _0x185afd(0x1aa) + _0xab59f8 + '</span></h3>' + guiresult; }