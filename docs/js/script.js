var _0x5000 = ['build', '<span\x20class=\x22logwarning\x22>The\x20Infocyte\x20HUNT\x20Agent\x20service\x20is\x20marked\x20as\x20an\x20interactive\x20service</span>', '<span\x20class=\x22logprimary\x22>Accessibility\x20features</span>', 'documentElement', '896051RNKyDG', 'clipboardData', 'readAsText', 'GUI\x20Logs\x20selected:\x20', 'size', 'target', 'null', 'match', '<span\x20class=\x22logsuccess\x20loginfoh\x22>Starting\x20as\x20windows\x20service</span>', '#evlogs', '<span\x20class=\x22logwarning\x22>Notifying\x20service\x20controller\x20that\x20HUNT\x20Agent\x20is\x20shutting\x20down</span>', 'includes', '858082uUJNmG', 'getElementById', 'block', 'indexOf', '<span\x20class=\x22logdanger\x22>The\x20Infocyte\x20HUNT\x20Agent\x20service\x20terminated\x20unexpectedly.</span>', '<span\x20class=\x22logdanger\x22>Access\x20is\x20denied.</span>', 'replaceAll', '#clogs', '<h3>Scan\x20logs\x20for\x20the\x20host:\x20<span\x20style=\x22color:\x20#99b3ff\x22>', '\x20=\x20', 'selectfilename', '<span\x20class=\x22logsuccess\x22>Result=Good.</span>', '<span\x20class=\x22oserror10051\x20loginfoh\x22>os\x20error\x2010051</span>', 'innerHTML', '<span\x20class=\x22logdanger\x22>An\x20error\x20occurred\x20while\x20sending\x20the\x20request..\x20The\x20request\x20failed\x20due\x20to\x20an\x20underlying\x20issue\x20such\x20as\x20network\x20connectivity\x20or\x20DNS\x20failure</span>', '<span\x20class=\x22logsuccess\x22>Target\x20is\x20live\x20and\x20accessible</span>', '&lt;Transport&gt;', '\x20active', '<span\x20class=\x22logdanger\x22>No\x20such\x20host\x20is\x20known</span>', 'style', '<span\x20class=\x22logsuccess\x22>Yara\x20scan\x20completed.</span>', '<span\x20class=\x22logsuccess\x22>Starting\x20Subscribers</span>', '&lt;None&gt;', 'round', 'hide', 'logicand', '<span\x20class=\x22logprimary\x22>Survey\x20completed\x20in\x20</span>', '[Error]', '1862405Pqondi', '<span\x20class=\x22logwarning\x22>PSRemote\x20Transfers\x20may\x20have\x20issues\x20unless\x20you\x20install\x20Powershell</span>', '\x20&&\x20', '<span\x20class=\x22logdanger\x22>Cannot\x20finish\x20fetching\x20user\x20accounts:</span>', 'scrollHeight', 'log', 'text/plain', '<span\x20class=\x22logprimary\x22>Enumerating\x20autostart\x20locations</span>', '\x22)\x20&&\x20', 'Please\x20upload\x20Event\x20Viewer\x20logs', '<span\x20class=\x22logsuccess\x22>Incyte:\x20Finished\x20enrichment\x20data\x20load</span>', '1920510jGNIMa', '\x22)))', '<span\x20class=\x22logdanger\x22>Failed:\x20Abandoned\x20data\x20load</span>', 'PSRemoting/WinRM', 'Please\x20upload\x20Controller\x20logs', 'landing', '<span\x20class=\x22logwarning\x22>Executing\x20via\x20agent</span>', 'guilogs', '<span\x20class=\x22logdanger\x22>Unable\x20to\x20connect\x20to\x20the\x20remote\x20server</span>', '<span\x20class=\x22logwarning\x22>might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group</span>', 'result', 'tzone:', '<span\x20class=\x22logdanger\x22>Heartbeat\x20Rejected:\x20Server\x20responded\x20with\x20code\x20Unauthorized:</span>', '<span\x20class=\x22logdanger\x22>The\x20network\x20path\x20was\x20not\x20found</span>', '<br>', 'slice', 'split', '<span\x20class=\x22logsuccess\x22>Finished\x20database\x20load</span>', 'change', 'replace', '<span\x20class=\x22logdanger\x22>Discovery:\x20Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20and\x20failed\x20DNS\x20resolution.\x20Target\x20MAY\x20NOT\x20EXIST\x20on\x20this\x20network</span>', 'getElementsByClassName', '\x22)\x20||\x20', '<span\x20class=\x22logsuccess\x22>A\x20service\x20was\x20installed\x20in\x20the\x20system</span>', '<span\x20class=\x22logdanger\x22>No\x20Response\x20to\x20Heartbeat:\x20An\x20error\x20occurred\x20while\x20sending\x20the\x20request</span>', 'Discovery:', '<span\x20class=\x22logprimary\x22>Getting\x20installed\x20application\x20list</span>', '<span\x20class=\x22logsuccess\x22>Completed</span>', '<span\x20class=\x22logsuccess\x22>Found\x20matches!</span>', 'value', 'Please\x20upload\x20Agent\x20logs', 'results', '<span\x20class=\x22logdanger\x22>SMB\x20<Transport>:\x20Could\x20not\x20get\x20agentId\x20via\x20Remote\x20Registry\x20Service.</span>', '<spana\x20id=\x22tzoneconvert\x22>$&</spana>', '<span\x20class=\x22logdanger\x22>Cannot\x20execute\x20jobs:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', '[agent::', 'onerror', '<span\x20class=\x22oserror10054\x20loginfoh\x22>os\x20error\x2010054</span>', 'tablinks', '<span\x20class=\x22logdanger\x22>Host\x20may\x20not\x20exist</span>', '<span\x20class=\x22logdanger\x22>Permission\x20denied</span>', '<span\x20class=\x22logprimary\x22>Run\x20keys</span>', 'join', '<span\x20class=\x22logprimary\x22>WMI\x20Persistence</span>', 'hostOs', 'getElementsByName', '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/360040640871-What-does-Failed-At-least-300s-since-last-heartbeat-mean-\x22\x20target=\x22_blank\x22>Failed:\x20At\x20least\x20600s\x20since\x20attempting\x20upload</a></span>', 'length', '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/360040640871-What-does-Failed-At-least-300s-since-last-heartbeat-mean-\x22\x20target=\x22_blank\x22>Failed:\x20At\x20least\x20300s\x20since\x20last\x20heartbeat</a></span>', '<span\x20class=\x22logdanger\x22>Received\x20stop\x20signal\x20from\x20service\x20controller</span>', 'railroad', '<span\x20class=\x22logsuccess\x22>Incyte\x20job\x20check\x20-\x20completed!</span>', 'Unknown', 'querySelector', '<span\x20class=\x22logwarning\x22>Connection\x20to\x20Infocyte\x20API\x20restored!</span>', 'name', 'keys', 'agent-deploy\x20job\x20fetched', 'body', '<span\x20class=\x22logdanger\x22>Service\x20stop\x20signal\x20received.</span>', '<spanb\x20id=\x22tzonehere\x22>$&</spanb>', '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/115000986908-Troubleshooting-WMI-RPC-Windows-\x22\x20target=\x22_blank\x22>0x800706BA</a></span>', '<span\x20class=\x22logprimary\x22>Enumerating\x20users</span>', 'stringify', 'mandate', 'onload', '<span\x20class=\x22logdanger\x22>callback\x20error:</span>', '</span></h3>', 'currentTarget', 'show', '#alogs', '\x20==\x20iregex(\x22', '<span\x20class=\x22logdanger\x22>Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20but\x20was\x20registered\x20in\x20DNS</span>', '\x22))))', 'Keeping\x20browser\x20health\x20in\x20mind,\x20file\x20upload\x20size\x20is\x20restricted\x20to\x2010Meg', '<span\x20class=\x22oserror10061\x20loginfoh\x22>os\x20error\x2010061</span>', 'location', '<span\x20class=\x22logwarning\x22>Heartbeat</span>', '<span\x20class=\x22logsuccess\x22>Access\x20Check:\x20SUCCEEDED!</span>', 'reload', '<span\x20class=\x22logprimary\x22>AppInit_DLLs</span>', '<span\x20class=\x22logsuccess\x22>Target\x20is\x20live</span>', '1641126JppGQf', '<span\x20class=\x22logprimary\x22>Collecting\x20important\x20events</span>', '<span\x20class=\x22logdanger\x22>unable\x20to\x20open\x20database\x20file</span>', 'className', 'host-access\x20job\x20fetched\x20by\x20controller', 'error', '980713JbGAxl', 'files', 'addEventListener', '1734922hyDXrT', 'Executing\x20via\x20agent', '<span\x20class=\x22logdanger\x22>Cannot\x20save\x20RTS\x20data:\x20unable\x20to\x20open\x20database\x20file</span>', 'display', '<span\x20class=\x22oserror10060\x20loginfoh\x22>os\x20error\x2010060</span>'];
(function(_0x2bd73e, _0x28ee0e) { var _0x4c9f68 = _0x1983; while (!![]) { try { var _0xec9114 = -parseInt(_0x4c9f68(0xee)) + parseInt(_0x4c9f68(0x149)) + -parseInt(_0x4c9f68(0x140)) + parseInt(_0x4c9f68(0x146)) + -parseInt(_0x4c9f68(0x152)) + parseInt(_0x4c9f68(0x15e)) + parseInt(_0x4c9f68(0xe3)); if (_0xec9114 === _0x28ee0e) break;
            else _0x2bd73e['push'](_0x2bd73e['shift']()); } catch (_0x1ae3d0) { _0x2bd73e['push'](_0x2bd73e['shift']()); } } }(_0x5000, 0xeee03));

function opentab(_0x18adcd, _0x2d3bb5) { var _0x167551 = _0x1983,
        _0x3e1b3e, _0x404f27, _0x2f3dea;
    _0x404f27 = document[_0x167551(0x103)]('tabcontent'); for (_0x3e1b3e = 0x0; _0x3e1b3e < _0x404f27['length']; _0x3e1b3e++) { _0x404f27[_0x3e1b3e][_0x167551(0x171)][_0x167551(0x14c)] = 'none', document['body'][_0x167551(0x103)](_0x167551(0xf3))[_0x167551(0xf3)][_0x167551(0x16b)] = ''; }
    _0x2f3dea = document[_0x167551(0x103)](_0x167551(0x114)); for (_0x3e1b3e = 0x0; _0x3e1b3e < _0x2f3dea[_0x167551(0x11d)]; _0x3e1b3e++) { _0x2f3dea[_0x3e1b3e]['className'] = _0x2f3dea[_0x3e1b3e][_0x167551(0x143)][_0x167551(0x101)]('\x20active', ''); }
    document[_0x167551(0x15f)](_0x2d3bb5)[_0x167551(0x171)]['display'] = _0x167551(0x160), _0x18adcd[_0x167551(0x132)][_0x167551(0x143)] += _0x167551(0x16f); }

function flowdiag() { var _0x197b6d = _0x1983;
    document[_0x197b6d(0x11b)](_0x197b6d(0x120))[0x0]['src'] = 'regexmap.html', window['scrollBy'](0x0, document[_0x197b6d(0x128)][_0x197b6d(0xe7)] || document[_0x197b6d(0x151)][_0x197b6d(0xe7)]); }

function _0x1983(_0x57f052, _0x5482ab) { return _0x1983 = function(_0x50003d, _0x198374) { _0x50003d = _0x50003d - 0xe1; var _0xe220d5 = _0x5000[_0x50003d]; return _0xe220d5; }, _0x1983(_0x57f052, _0x5482ab); }

function regexmatch() { var _0x4d0144 = _0x1983,
        _0x31178f = document['getElementById']('yamlInput')[_0x4d0144(0x10b)],
        _0x15789a = _0x31178f[_0x4d0144(0x164)](/\n|\s/g, ''),
        _0x20f33e = []; if (_0x15789a['includes'](_0x4d0144(0x11a))) { var _0x58b8a7 = _0x31178f[_0x4d0144(0xfd)](_0x31178f[_0x4d0144(0x161)]('&&') + 0x3)['replace'](/\n|\s|\"|\\/g, '')[_0x4d0144(0xfe)]('&&'); for (var _0x4d2483 in _0x58b8a7) { console[_0x4d0144(0xe8)](_0x58b8a7[_0x4d2483][_0x4d0144(0xfe)](/==|!=/)); } } }

function trimMe(_0x49ebac) { var _0x203bd2 = _0x1983;
    _0x49ebac[_0x203bd2(0x10b)] = _0x49ebac['value'][_0x203bd2(0x101)](/\s\s|iregex\(\"|\"\)|iregex\(\'|\'\)/gi, '\x20')['replace'](/\s==\s|\":\"|\":\s\"/g, _0x203bd2(0x167))['replace'](/\"|,$/g, '')[_0x203bd2(0x101)](/\(\n/g, '(')['replace'](/\n\)/g, ')'); }

function buildrule() { var _0x3d6c01 = _0x1983,
        _0x68ff94 = document[_0x3d6c01(0x15f)](_0x3d6c01(0x12e))[_0x3d6c01(0x10b)][_0x3d6c01(0x164)](/\n|,/g, _0x3d6c01(0xe5))[_0x3d6c01(0x101)](/=/g, _0x3d6c01(0x135)),
        _0x3c2f27 = document['getElementById'](_0x3d6c01(0x177))['value']['replaceAll'](/\n|,/g, _0x3d6c01(0xe5))[_0x3d6c01(0x101)](/=/g, _0x3d6c01(0x135)),
        _0x1abf53 = document['getElementById']('logicor')[_0x3d6c01(0x10b)][_0x3d6c01(0x164)](/\n|,/g, '\x20&&\x20')[_0x3d6c01(0x101)](/=/g, _0x3d6c01(0x135)),
        _0x915db1 = _0x68ff94[_0x3d6c01(0x164)](/\s&&\s/g, _0x3d6c01(0xeb))['replaceAll'](/\s\|\|\s/g, _0x3d6c01(0x104)),
        _0x4e4648 = _0x3c2f27[_0x3d6c01(0x164)](/\s&&\s/g, _0x3d6c01(0xeb))[_0x3d6c01(0x164)](/\s\|\|\s/g, _0x3d6c01(0x104)),
        _0x3a5300 = _0x1abf53['replaceAll'](/\s&&\s/g, _0x3d6c01(0xeb))[_0x3d6c01(0x164)](/\s\|\|\s/g, _0x3d6c01(0x104)); if (_0x68ff94 == '') var _0x259e63 = 'Mandate\x20field\x20is\x20Must';
    else { if (_0x3c2f27 == '' && _0x1abf53 == '') var _0x259e63 = _0x915db1 + '\x22)';
        else { if (_0x1abf53 == '') var _0x259e63 = _0x915db1 + _0x3d6c01(0xeb) + _0x4e4648 + '\x22)';
            else { if (_0x3c2f27 == '') var _0x259e63 = _0x915db1 + _0x3d6c01(0x104) + _0x3a5300 + '\x22)';
                else var _0x259e63 = _0x915db1 + _0x3d6c01(0xeb) + _0x4e4648 + '\x22)\x20||\x20' + _0x3a5300 + '\x22)'; } } } var _0x102174 = _0x259e63[_0x3d6c01(0x164)](/\)\"\)/g, '\x22))')[_0x3d6c01(0x164)](/\)\"\)\)/g, _0x3d6c01(0xef))[_0x3d6c01(0x164)](/\)\"\)\)\)/g, _0x3d6c01(0x137))['replaceAll'](/\b\s+\"|\"\s\b/g, '\x22')['replaceAll'](/!\s==/g, '\x20!=\x20')[_0x3d6c01(0x164)](/\"\s|\s\"/g, '\x22')[_0x3d6c01(0x164)](/\./g, '\x5c.')[_0x3d6c01(0x164)](/\s&&\"\)/g, '')[_0x3d6c01(0x164)](/iregex\(\"null\"\)/g, _0x3d6c01(0x158));
    document[_0x3d6c01(0x15f)](_0x3d6c01(0x14e))[_0x3d6c01(0x16b)] = _0x102174; }

function evlogs() { var _0x113726 = _0x1983; let _0x578492 = document[_0x113726(0x123)](_0x113726(0x15b));
    _0x578492[_0x113726(0x148)](_0x113726(0x100), () => { var _0x32a4ec = _0x113726; let _0x2b1ccb = _0x578492['files']; if (_0x2b1ccb[_0x32a4ec(0x11d)] == 0x0) return; const _0x26436c = _0x2b1ccb[0x0]; if (Math['round'](_0x26436c[_0x32a4ec(0x156)] / 0x100000) < 0xa) { let _0x3a8fe2 = new FileReader();
            _0x3a8fe2[_0x32a4ec(0x154)](_0x26436c), _0x3a8fe2[_0x32a4ec(0x12f)] = _0x2020ad => { var _0x4d914f = _0x32a4ec; const _0x3ae087 = _0x2020ad[_0x4d914f(0x157)]['result']; var _0x302a18 = _0x3ae087; if (_0x302a18[_0x4d914f(0x15d)]('InstanceID')) { var _0x493d53 = { 'A\x20service\x20was\x20installed\x20in\x20the\x20system': _0x4d914f(0x105), 'The\x20Infocyte\x20HUNT\x20Agent\x20service\x20is\x20marked\x20as\x20an\x20interactive\x20service.': _0x4d914f(0x14f), 'The\x20Infocyte\x20HUNT\x20Agent\x20service\x20terminated\x20unexpectedly.': _0x4d914f(0x162) }; let _0x54f6df = Object['keys'](_0x493d53); var _0x36837c = JSON[_0x4d914f(0x12d)](_0x54f6df)[_0x4d914f(0x101)](/,/g, '|')[_0x4d914f(0x101)](/\[|\]|\"/g, ''),
                        _0x1b970b = new RegExp(_0x36837c, 'gi');
                    finalevlogs = _0x302a18[_0x4d914f(0x101)](_0x1b970b, _0x2e7a22 => _0x493d53[_0x2e7a22]), document[_0x4d914f(0x15f)]('results')[_0x4d914f(0x16b)] = finalevlogs; } else alert(_0x4d914f(0xec)), window['location']['reload'](); }, _0x3a8fe2[_0x32a4ec(0x112)] = _0x3a636f => alert(_0x3a636f[_0x32a4ec(0x157)][_0x32a4ec(0x145)][_0x32a4ec(0x125)]); } else alert(_0x32a4ec(0x138)), window['location'][_0x32a4ec(0x13d)](); }); }

function alogs() { var _0x1ee19b = _0x1983; let _0x160707 = document[_0x1ee19b(0x123)](_0x1ee19b(0x134));
    _0x160707[_0x1ee19b(0x148)](_0x1ee19b(0x100), () => { var _0x341452 = _0x1ee19b; let _0x2d5941 = _0x160707[_0x341452(0x147)]; if (_0x2d5941[_0x341452(0x11d)] == 0x0) return; const _0x1c95bd = _0x2d5941[0x0]; if (Math[_0x341452(0x175)](_0x1c95bd[_0x341452(0x156)] / 0x100000) < 0xa) { let _0x3f5d94 = new FileReader();
            _0x3f5d94[_0x341452(0x154)](_0x1c95bd), _0x3f5d94[_0x341452(0x12f)] = _0x26f4ce => { var _0x89d6ed = _0x341452,
                    _0x25f6ec = _0x26f4ce[_0x89d6ed(0x157)][_0x89d6ed(0xf8)][_0x89d6ed(0x101)](/,/g, ''),
                    _0x526cab = _0x25f6ec[_0x89d6ed(0xfe)](/\r\n|\n/),
                    _0x4bc0bf = _0x526cab[_0x89d6ed(0x118)](',')['replace'](/,/g, _0x89d6ed(0xfc)); if (_0x4bc0bf[_0x89d6ed(0x15d)](_0x89d6ed(0x111))) { var _0x37a586 = { 'Agent\x20has\x20started': '<span\x20class=\x22logsuccess\x20loginfoh\x22>Agent\x20has\x20started</span>', 'Starting\x20as\x20windows\x20service': _0x89d6ed(0x15a), 'Results\x20sent\x20scan\x20is\x20complete': '<span\x20class=\x22logsuccess\x22>Results\x20sent\x20scan\x20is\x20complete</span>', 'Found\x20matches!': _0x89d6ed(0x10a), 'Yara\x20scan\x20completed.': _0x89d6ed(0x172), 'Result=Good.': _0x89d6ed(0x169), 'Cannot\x20execute\x20jobs:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url': _0x89d6ed(0x110), 'Service\x20stop\x20signal\x20received.': _0x89d6ed(0x129), 'Cannot\x20save\x20RTS\x20data:\x20unable\x20to\x20open\x20database\x20file': _0x89d6ed(0x14b), 'Received\x20stop\x20signal\x20from\x20service\x20controller': _0x89d6ed(0x11f), 'error\x20notifying\x20wait\x20possible\x20future\x20leak': '<span\x20class=\x22logdanger\x22>error\x20notifying\x20wait\x20possible\x20future\x20leak</span>', 'Unable\x20to\x20put\x20data:\x20error\x20sending\x20request\x20for\x20url': '<span\x20class=\x22logdanger\x22>Unable\x20to\x20put\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', 'unable\x20to\x20open\x20database\x20file': _0x89d6ed(0x142), 'Cannot\x20finish\x20fetching\x20user\x20accounts:': _0x89d6ed(0xe6), 'Error\x20communicating\x20with\x20API:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url': '<span\x20class=\x22logdanger\x22>Error\x20communicating\x20with\x20API:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', 'Result=Suspicious.': '<span\x20class=\x22logdanger\x22>Result=Suspicious.</span>', 'Extension\x20Error:': '<span\x20class=\x22logdanger\x22>Extension\x20Error:</span>', 'callback\x20error:': _0x89d6ed(0x130), 'runtime\x20error:': '<span\x20class=\x22logdanger\x22>runtime\x20error:</span>', 'os\x20error\x2010051': _0x89d6ed(0x16a), 'os\x20error\x2010060': _0x89d6ed(0x14d), 'os\x20error\x2010054': _0x89d6ed(0x113), 'os\x20error\x2010061': _0x89d6ed(0x139), 'os\x20error\x201450': '<span\x20class=\x22oserror1450\x20loginfoh\x22>os\x20error\x201450</span>', 'Enabling\x20RTS': '<span\x20class=\x22logwarning\x22>Enabling\x20RTS</span>', 'RTS\x20Enabled': '<span\x20class=\x22logwarning\x22>RTS\x20Enabled</span>', 'Notifying\x20service\x20controller\x20that\x20HUNT\x20Agent\x20is\x20shutting\x20down': _0x89d6ed(0x15c), 'Enumerating\x20running\x20processes': '<span\x20class=\x22logprimary\x22>Enumerating\x20running\x20processes</span>', 'Enumerating\x20drivers': '<span\x20class=\x22logprimary\x22>Enumerating\x20drivers</span>', 'Enumerating\x20autostart\x20locations': _0x89d6ed(0xea), 'Enumerating\x20users': _0x89d6ed(0x12c), 'Run\x20keys': _0x89d6ed(0x117), 'AppInit_DLLs': _0x89d6ed(0x13e), 'WMI\x20Persistence': _0x89d6ed(0x119), 'Services': '<span\x20class=\x22logprimary\x22>Services</span>', 'Accessibility\x20features': _0x89d6ed(0x150), 'Files': '<span\x20class=\x22logprimary\x22>Files</span>', 'Collecting\x20important\x20events': _0x89d6ed(0x141), 'Getting\x20installed\x20application\x20list': _0x89d6ed(0x108), 'Matched\x20yara\x20rule': '<span\x20class=\x22logprimary\x22>Matched\x20yara\x20rule</span>' }; let _0x297729 = Object[_0x89d6ed(0x126)](_0x37a586); var _0x476a7f = JSON['stringify'](_0x297729)[_0x89d6ed(0x101)](/,/g, '|')['replace'](/\[|\]|\"/g, ''),
                        _0x3003ac = new RegExp(_0x476a7f, 'gi');
                    finalalogs = _0x4bc0bf['replace'](_0x3003ac, _0xd81177 => _0x37a586[_0xd81177]), finalalogs['includes'](_0x89d6ed(0xf9)) ? (finalalogs = finalalogs[_0x89d6ed(0x101)](/tzone:[a-zA-Z/_]{0,50}/g, _0x89d6ed(0x12a)), document['getElementById'](_0x89d6ed(0x10d))[_0x89d6ed(0x16b)] = finalalogs[_0x89d6ed(0x101)](/\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{1,12}\sUTC/g, _0x89d6ed(0x12a))) : document[_0x89d6ed(0x15f)](_0x89d6ed(0x10d))[_0x89d6ed(0x16b)] = finalalogs[_0x89d6ed(0x101)](/\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{1,12}\sUTC/g, _0x89d6ed(0x10f)); } else alert(_0x89d6ed(0x10c)), window[_0x89d6ed(0x13a)][_0x89d6ed(0x13d)](); }, _0x3f5d94[_0x341452(0x112)] = _0x542bfb => alert(_0x542bfb[_0x341452(0x157)]['error']['name']); } else alert(_0x341452(0x138)), window[_0x341452(0x13a)][_0x341452(0x13d)](); }); }

function clogs() { var _0x130d12 = _0x1983; let _0x29a4ba = document[_0x130d12(0x123)](_0x130d12(0x165));
    _0x29a4ba[_0x130d12(0x148)](_0x130d12(0x100), () => { var _0x423d1d = _0x130d12; let _0xed4212 = _0x29a4ba[_0x423d1d(0x147)]; if (_0xed4212[_0x423d1d(0x11d)] == 0x0) return; const _0xf58d8e = _0xed4212[0x0]; if (Math[_0x423d1d(0x175)](_0xf58d8e[_0x423d1d(0x156)] / 0x100000) < 0xa) { let _0x4ed076 = new FileReader();
            _0x4ed076[_0x423d1d(0x154)](_0xf58d8e), _0x4ed076[_0x423d1d(0x12f)] = _0x46260f => { var _0x2a3e82 = _0x423d1d,
                    _0x462531 = _0x46260f[_0x2a3e82(0x157)][_0x2a3e82(0xf8)]; if (_0x462531['includes'](_0x2a3e82(0x107)) || _0x462531[_0x2a3e82(0x15d)](_0x2a3e82(0xf1)) || _0x462531['includes']('ing\x20Subscribers') || _0x462531['includes'](_0x2a3e82(0xe2))) { var _0xd9b1f2 = { 'Starting\x20Subscribers': _0x2a3e82(0x173), 'Access\x20Check:\x20SUCCEEDED!': _0x2a3e82(0x13c), 'Jobs\x20loaded\x20successfully': '<span\x20class=\x22logsuccess\x22>Jobs\x20loaded\x20successfully</span>', 'Target\x20is\x20live\x20and\x20accessible': _0x2a3e82(0x16d), 'Target\x20is\x20live': _0x2a3e82(0x13f), 'Connection\x20to\x20Infocyte\x20API\x20restored!': _0x2a3e82(0x124), 'PSRemote\x20Transfers\x20may\x20have\x20issues\x20unless\x20you\x20install\x20Powershell': _0x2a3e82(0xe4), 'might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group': _0x2a3e82(0xf7), 'Heartbeat\x20Rejected:\x20Server\x20responded\x20with\x20code\x20Unauthorized:': _0x2a3e82(0xfa), 'No\x20Response\x20to\x20Heartbeat:\x20An\x20error\x20occurred\x20while\x20sending\x20the\x20request': _0x2a3e82(0x106), 'Access\x20Check\x20FAILED.': '<span\x20class=\x22logdanger\x22>Access\x20Check\x20FAILED.</span>', 'Access\x20is\x20denied.': _0x2a3e82(0x163), 'Unable\x20to\x20connect\x20to\x20the\x20remote\x20server': _0x2a3e82(0xf6), 'Host\x20may\x20not\x20exist': _0x2a3e82(0x115), 'Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20but\x20was\x20registered\x20in\x20DNS': _0x2a3e82(0x136), 'Requested\x20registry\x20access\x20is\x20not\x20allowed.': '<span\x20class=\x22logdanger\x22>Requested\x20registry\x20access\x20is\x20not\x20allowed.</span>', 'No\x20such\x20host\x20is\x20known': _0x2a3e82(0x170), 'The\x20network\x20path\x20was\x20not\x20found': _0x2a3e82(0xfb), 'Discovery:\x20Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20and\x20failed\x20DNS\x20resolution.\x20Target\x20MAY\x20NOT\x20EXIST\x20on\x20this\x20network': _0x2a3e82(0x102), 'An\x20error\x20occurred\x20while\x20sending\x20the\x20request..\x20The\x20request\x20failed\x20due\x20to\x20an\x20underlying\x20issue\x20such\x20as\x20network\x20connectivity\x20or\x20DNS\x20failure': _0x2a3e82(0x16c), 'INACCESSIBLE': '<span\x20class=\x22logdanger\x22>INACCESSIBLE</span>', 'Access\x20denied!': '<span\x20class=\x22logdanger\x22>Access\x20denied!</span>', 'Permission\x20denied': _0x2a3e82(0x116), 'Stopping\x20Subscribers': '<span\x20class=\x22logdanger\x22>Stopping\x20Subscribers</span>', 'All\x20transport\x20options\x20failed': '<span\x20class=\x22logdanger\x22>All\x20transport\x20options\x20failed</span>', 'SMB\x20<Transport>:\x20Could\x20not\x20get\x20agentId\x20via\x20Remote\x20Registry\x20Service.': _0x2a3e82(0x10e), '0x800706BA': _0x2a3e82(0x12b), 'Successfully\x20EXECUTED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe': '<span\x20class=\x22logprimary\x22>Successfully\x20EXECUTED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe</span>' }; let _0x536b67 = Object[_0x2a3e82(0x126)](_0xd9b1f2); var _0x18a821 = JSON[_0x2a3e82(0x12d)](_0x536b67)[_0x2a3e82(0x101)](/,/g, '|')[_0x2a3e82(0x101)](/\[|\]|\"/g, ''),
                        _0x14a656 = new RegExp(_0x18a821, 'gi');
                    finalclogs = _0x462531[_0x2a3e82(0x101)](_0x14a656, _0x3b2c99 => _0xd9b1f2[_0x3b2c99]), document[_0x2a3e82(0x15f)](_0x2a3e82(0x10d))['innerHTML'] = finalclogs[_0x2a3e82(0x101)](/<Transport>/g, _0x2a3e82(0x16e))['replace'](/<None>/g, _0x2a3e82(0x174)); } else alert(_0x2a3e82(0xf2)), window['location'][_0x2a3e82(0x13d)](); }, _0x4ed076[_0x423d1d(0x112)] = _0x2be189 => alert(_0x2be189[_0x423d1d(0x157)][_0x423d1d(0x145)][_0x423d1d(0x125)]); } else alert(_0x423d1d(0x138)), window[_0x423d1d(0x13a)][_0x423d1d(0x13d)](); }); }

function guilogs() { var _0xe621a1 = _0x1983;
    document[_0xe621a1(0x15f)](_0xe621a1(0xf5))[_0xe621a1(0x143)] = _0xe621a1(0x133); }

function gui() { var _0x296cb8 = _0x1983;
    document['getElementById'](_0x296cb8(0xf5))[_0x296cb8(0x143)] = _0x296cb8(0x176), document[_0x296cb8(0x15f)](_0x296cb8(0x168))[_0x296cb8(0x16b)] = _0x296cb8(0x155); var _0x3a02f0 = event[_0x296cb8(0x153)]['getData'](_0x296cb8(0xe9))['replace'](/Timeline|[A-Z]{3}\s\d{1,2}|\d{1,2}:\d\d:\d\d\s(a|p)m/g, ''),
        _0x18fef4 = { 'Completed': _0x296cb8(0x109), 'Incyte\x20job\x20check\x20-\x20completed!': _0x296cb8(0x121), 'Incyte:\x20Finished\x20enrichment\x20data\x20load': _0x296cb8(0xed), 'Finished\x20database\x20load': _0x296cb8(0xff), 'Heartbeat': _0x296cb8(0x13b), 'Executing\x20via\x20agent': _0x296cb8(0xf4), 'might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group': _0x296cb8(0xf7), 'Failed:\x20Abandoned\x20data\x20load': _0x296cb8(0xf0), 'Failed:\x20At\x20least\x20300s\x20since\x20last\x20heartbeat': _0x296cb8(0x11e), 'Failed:\x20At\x20least\x20600s\x20since\x20attempting\x20upload': _0x296cb8(0x11c), 'Survey\x20completed\x20in\x20': _0x296cb8(0xe1) }; let _0x2f7d40 = Object[_0x296cb8(0x126)](_0x18fef4); var _0x24d1cd = JSON[_0x296cb8(0x12d)](_0x2f7d40)[_0x296cb8(0x101)](/,/g, '|')[_0x296cb8(0x101)](/\[|\]|\"/g, ''),
        _0x2691df = new RegExp(_0x24d1cd, 'gi'); if (_0x3a02f0['includes'](_0x296cb8(0x127))) var _0x545896 = _0x3a02f0[_0x296cb8(0x159)](/by\scontroller\s.([^\s]+)/g)[0x0][_0x296cb8(0xfe)]('\x20')[0x2];
    else { if (_0x3a02f0[_0x296cb8(0x15d)](_0x296cb8(0x14a))) var _0x545896 = _0x3a02f0[_0x296cb8(0x159)](/on\shost\s.([^\s]+)/g)[0x0][_0x296cb8(0xfe)]('\x20')[0x2];
        else { if (_0x3a02f0[_0x296cb8(0x15d)](_0x296cb8(0x144))) var _0x545896 = _0x3a02f0['match'](/enrichment\sof\s.([^\s]+)/g)[0x0][_0x296cb8(0xfe)]('\x20')[0x2];
            else var _0x545896 = _0x296cb8(0x122); } }
    guiresult = _0x3a02f0[_0x296cb8(0x101)](_0x2691df, _0x237974 => _0x18fef4[_0x237974]), document[_0x296cb8(0x15f)](_0x296cb8(0x10d))[_0x296cb8(0x16b)] = _0x296cb8(0x166) + _0x545896 + _0x296cb8(0x131) + guiresult; }