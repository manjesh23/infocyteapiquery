(function(_0xddef07, _0x3901a7) { var _0x566d82 = _0x113e,
        _0x531196 = _0xddef07(); while (!![]) { try { var _0x526b2b = parseInt(_0x566d82(0x141)) / 0x1 * (-parseInt(_0x566d82(0x154)) / 0x2) + -parseInt(_0x566d82(0xd3)) / 0x3 * (-parseInt(_0x566d82(0x107)) / 0x4) + -parseInt(_0x566d82(0xd9)) / 0x5 + parseInt(_0x566d82(0x166)) / 0x6 * (parseInt(_0x566d82(0xf0)) / 0x7) + -parseInt(_0x566d82(0x14b)) / 0x8 + parseInt(_0x566d82(0x120)) / 0x9 + -parseInt(_0x566d82(0xca)) / 0xa * (-parseInt(_0x566d82(0x106)) / 0xb); if (_0x526b2b === _0x3901a7) break;
            else _0x531196['push'](_0x531196['shift']()); } catch (_0x22aeff) { _0x531196['push'](_0x531196['shift']()); } } }(_0x3df5, 0x74676));

function opentab(_0x3691dc, _0x36414f) { var _0x3d52fc = _0x113e,
        _0x567e96, _0x3242eb, _0x4cf9d0;
    _0x3242eb = document[_0x3d52fc(0x126)](_0x3d52fc(0x15d)); for (_0x567e96 = 0x0; _0x567e96 < _0x3242eb['length']; _0x567e96++) { _0x3242eb[_0x567e96][_0x3d52fc(0x147)][_0x3d52fc(0x125)] = 'none', document[_0x3d52fc(0xf5)][_0x3d52fc(0x126)](_0x3d52fc(0x104))['landing']['innerHTML'] = ''; }
    _0x4cf9d0 = document[_0x3d52fc(0x126)](_0x3d52fc(0x133)); for (_0x567e96 = 0x0; _0x567e96 < _0x4cf9d0[_0x3d52fc(0x11b)]; _0x567e96++) { _0x4cf9d0[_0x567e96][_0x3d52fc(0xec)] = _0x4cf9d0[_0x567e96][_0x3d52fc(0xec)][_0x3d52fc(0xe6)](_0x3d52fc(0xf1), ''); }
    document[_0x3d52fc(0x12e)](_0x36414f)[_0x3d52fc(0x147)][_0x3d52fc(0x125)] = _0x3d52fc(0x12f), _0x3691dc[_0x3d52fc(0x103)][_0x3d52fc(0xec)] += '\x20active'; }

function _0x113e(_0x1f6cf5, _0x18dfb6) { var _0x3df5d6 = _0x3df5(); return _0x113e = function(_0x113e06, _0x5ee944) { _0x113e06 = _0x113e06 - 0xc8; var _0x59e092 = _0x3df5d6[_0x113e06]; return _0x59e092; }, _0x113e(_0x1f6cf5, _0x18dfb6); }

function _0x3df5() { var _0x408b58 = ['<span\x20class=\x22logprimary\x22>Accessibility\x20features</span>', '<span\x20class=\x22logdanger\x22>Cannot\x20get\x20processes\x20from\x20system\x20information</span>', 'mandate', 'style', 'result', '[agent::', 'Executing\x20via\x20agent', '1346520vNLNiE', 'Keeping\x20browser\x20health\x20in\x20mind,\x20file\x20upload\x20size\x20is\x20restricted\x20to\x2010Meg', 'indexOf', '<spana\x20id=\x22tzoneconvert\x22>$&</spana>', '<span\x20class=\x22logwarning\x22>PSRemote\x20Transfers\x20may\x20have\x20issues\x20unless\x20you\x20install\x20Powershell</span>', '\x22)\x20&&\x20', '<span\x20class=\x22logdanger\x22>cannot\x20be\x20accessed</span>', '\x20==\x20iregex(\x22', 'keys', '6998eOyAfk', '<span\x20class=\x22logsuccess\x22>Result=Good.</span>', '<span\x20class=\x22logwarning\x22>Connection\x20to\x20Infocyte\x20API\x20restored!</span>', 'railroad', '<br>', 'name', '<span\x20class=\x22logsuccess\x22>Found\x20matches!</span>', 'addEventListener', 'change', 'tabcontent', '<span\x20class=\x22logprimary\x22>AppInit_DLLs</span>', '<span\x20class=\x22logdanger\x22>Access\x20is\x20denied.</span>', '<span\x20class=\x22logdanger\x22>Requested\x20registry\x20access\x20is\x20not\x20allowed.</span>', 'split', 'logicor', 'documentElement', 'Please\x20upload\x20Controller\x20logs', 'error', '2946BcQJYa', '<span\x20class=\x22logprimary\x22>System\x20inspections\x20complete</span>', 'hide', '<span\x20class=\x22logdanger\x22>Cannot\x20execute\x20jobs:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', 'replaceAll', '10760QYniRD', 'results', '<span\x20class=\x22oserror10051\x20loginfoh\x22>os\x20error\x2010051</span>', '<span\x20class=\x22logsuccess\x22>Completed</span>', '<span\x20class=\x22logdanger\x22>No\x20such\x20host\x20is\x20known</span>', '<span\x20class=\x22logprimary\x22>Files</span>', '<span\x20class=\x22logsuccess\x22>Finished\x20database\x20load</span>', '\x20=\x20', 'Please\x20upload\x20Event\x20Viewer\x20logs', '81siGRux', 'onerror', 'size', 'readAsText', '<span\x20class=\x22logdanger\x22>Heartbeat\x20Rejected:\x20Server\x20responded\x20with\x20code\x20Unauthorized:</span>', '<span\x20class=\x22logdanger\x22>INACCESSIBLE</span>', '3480445kyuuJY', 'regexmap.html', '<span\x20class=\x22logdanger\x22>Service\x20stop\x20signal\x20received.</span>', 'Please\x20upload\x20Agent\x20logs', '<span\x20class=\x22logwarning\x22>might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group</span>', '<span\x20class=\x22logdanger\x22>no\x20such\x20table:\x20memscan_temp</span>', '<span\x20class=\x22logsuccess\x22>Successfully\x20TRANSFERRED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe</span>', '<span\x20class=\x22logprimary\x22>Enumerating\x20drivers</span>', 'target', '#alogs', '&lt;None&gt;', '<span\x20class=\x22logdanger\x22>All\x20transport\x20options\x20failed</span>', '<span\x20class=\x22logdanger\x22>An\x20error\x20occurred\x20while\x20sending\x20the\x20request..\x20The\x20request\x20failed\x20due\x20to\x20an\x20underlying\x20issue\x20such\x20as\x20network\x20connectivity\x20or\x20DNS\x20failure</span>', 'replace', 'selectfilename', '<span\x20class=\x22oserror10054\x20loginfoh\x22>os\x20error\x2010054</span>', '<span\x20class=\x22logdanger\x22>No\x20Response\x20to\x20Heartbeat:\x20An\x20error\x20occurred\x20while\x20sending\x20the\x20request</span>', '<span\x20class=\x22logwarning\x22>Notifying\x20service\x20controller\x20that\x20HUNT\x20Agent\x20is\x20shutting\x20down</span>', 'includes', 'className', 'innerHTML', '<span\x20class=\x22logdanger\x22>Unable\x20to\x20put\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', '<span\x20class=\x22logdanger\x22>runtime\x20error:</span>', '10339eyXksa', '\x20active', '<span\x20class=\x22oserror10060\x20loginfoh\x22>os\x20error\x2010060</span>', '<span\x20class=\x22Luastring\x20loginfoh\x22>Lua\x20string</span>', 'PSRemoting/WinRM', 'body', '<span\x20class=\x22logdanger\x22>Error\x20communicating\x20with\x20API:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url</span>', '<span\x20class=\x22logdanger\x22>The\x20network\x20path\x20was\x20not\x20found</span>', '<span\x20class=\x22logsuccess\x22>Running\x20with\x20args:\x20\x20--url\x20https://askpentest.infocyte.com\x20--auth\x20f8861d03-1a63-4344-bb01-67e6bc676f77\x20--no-install</span>', 'show', 'text/plain', '<span\x20class=\x22logprimary\x22>Enumerating\x20processes</span>', '\x22)))', '<span\x20class=\x22logsuccess\x22>Target\x20is\x20live</span>', '<span\x20class=\x22logdanger\x22>Cannot\x20finish\x20fetching\x20user\x20accounts:</span>', '&lt;Transport&gt;', '<span\x20class=\x22logdanger\x22>Could\x20not\x20merge\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp</span>', '\x20&&\x20', 'match', 'currentTarget', 'landing', 'slice', '561CJFGeE', '125076miVsyn', 'getData', 'tzone:', '<span\x20class=\x22logwarning\x22>Enabling\x20RTS</span>', 'src', '<span\x20class=\x22logdanger\x22>Received\x20stop\x20signal\x20from\x20service\x20controller</span>', 'clipboardData', 'value', 'scrollBy', 'getElementsByName', '<span\x20class=\x22logdanger\x22>error\x20notifying\x20wait\x20possible\x20future\x20leak</span>', '<span\x20class=\x22logprimary\x22>Getting\x20installed\x20application\x20list</span>', '<span\x20class=\x22logsuccess\x20loginfoh\x22>Starting\x20as\x20windows\x20service</span>', 'reload', '#evlogs', 'files', 'querySelector', '\x22)\x20||\x20', '<span\x20class=\x22logprimary\x22>Enumerating\x20running\x20processes</span>', '<span\x20class=\x22logprimary\x22>Survey\x20completed\x20in\x20</span>', 'length', '<span\x20class=\x22logsuccess\x22>Attempting\x20transfer\x20agent\x20to\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe</span>', '<span\x20class=\x22logprimary\x22>Run\x20keys</span>', 'agent-deploy\x20job\x20fetched', 'guilogs', '3560886UcGEBY', '[Error]', '<span\x20class=\x22logdanger\x22>Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20but\x20was\x20registered\x20in\x20DNS</span>', '<span\x20class=\x22logprimary\x22>Matched\x20yara\x20rule</span>', '<span\x20class=\x22logdanger\x22>no\x20such\x20table:\x20user_temp</span>', 'display', 'getElementsByClassName', 'join', '<span\x20class=\x22oserror104\x20loginfoh\x22>os\x20error\x20104</span>', '<span\x20class=\x22logdanger\x22>SMB\x20<Transport>:\x20Could\x20not\x20get\x20agentId\x20via\x20Remote\x20Registry\x20Service.</span>', '<span\x20class=\x22logsuccess\x22>Results\x20sent\x20scan\x20is\x20complete</span>', 'round', '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/115000986908-Troubleshooting-WMI-RPC-Windows-\x22\x20target=\x22_blank\x22>0x800706BA</a></span>', '<span\x20class=\x22logprimary\x22>Enumerating\x20users</span>', 'getElementById', 'block', '<span\x20class=\x22logdanger\x22>Failed:\x20Abandoned\x20data\x20load</span>', 'ing\x20Subscribers', '#clogs', 'tablinks', '<span\x20class=\x22logdanger\x22>unable\x20to\x20open\x20database\x20file</span>', 'stringify', '<span\x20class=\x22logwarning\x22>Cannot\x20initialize\x20package\x20manager</span>', '<span\x20class=\x22logdanger\x22>Host\x20may\x20not\x20exist</span>', 'location', '<span\x20class=\x22logprimary\x22>WMI\x20Persistence</span>', '<span\x20class=\x22logsuccess\x22>Incyte\x20job\x20check\x20-\x20completed!</span>', '<span\x20class=\x22oserror10061\x20loginfoh\x22>os\x20error\x2010061</span>', '<span\x20class=\x22logwarning\x22>Heartbeat</span>', '<span\x20class=\x22logsuccess\x22>Access\x20Check:\x20SUCCEEDED!</span>', '<spanb\x20id=\x22tzonehere\x22>$&</spanb>', '<h3>Scan\x20logs\x20for\x20the\x20host:\x20<span\x20style=\x22color:\x20#99b3ff\x22>', 'onload', '194TootAR', '<span\x20class=\x22logdanger\x22>Cannot\x20wait\x20for\x20upload\x20authorization</span>', 'Discovery:'];
    _0x3df5 = function() { return _0x408b58; }; return _0x3df5(); }

function flowdiag() { var _0x4ff24e = _0x113e;
    document[_0x4ff24e(0x110)](_0x4ff24e(0x157))[0x0][_0x4ff24e(0x10b)] = _0x4ff24e(0xda), window[_0x4ff24e(0x10f)](0x0, document[_0x4ff24e(0xf5)]['scrollHeight'] || document[_0x4ff24e(0x163)]['scrollHeight']); }

function regexmatch() { var _0x3f069a = _0x113e,
        _0x277224 = document[_0x3f069a(0x12e)]('yamlInput')['value'],
        _0x3bf16e = _0x277224['replaceAll'](/\n|\s/g, ''),
        _0x57720f = []; if (_0x3bf16e[_0x3f069a(0xeb)]('hostOs')) { var _0x770d8f = _0x277224[_0x3f069a(0x105)](_0x277224[_0x3f069a(0x14d)]('&&') + 0x3)['replace'](/\n|\s|\"|\\/g, '')['split']('&&'); for (var _0x59e6f4 in _0x770d8f) { console['log'](_0x770d8f[_0x59e6f4][_0x3f069a(0x161)](/==|!=/)); } } }

function trimMe(_0x5bb2d3) { var _0x5cb1a3 = _0x113e;
    _0x5bb2d3['value'] = _0x5bb2d3[_0x5cb1a3(0x10e)]['replace'](/\s\s|iregex\(\"|\"\)|iregex\(\'|\'\)/gi, '\x20')[_0x5cb1a3(0xe6)](/\s==\s|\":\"|\":\s\"/g, _0x5cb1a3(0xd1))[_0x5cb1a3(0xe6)](/\"|,$/g, '')[_0x5cb1a3(0xe6)](/\(\n/g, '(')[_0x5cb1a3(0xe6)](/\n\)/g, ')'); }

function buildrule() { var _0x67821f = _0x113e,
        _0x3b9eeb = document[_0x67821f(0x12e)](_0x67821f(0x146))[_0x67821f(0x10e)][_0x67821f(0xc9)](/\n|,/g, _0x67821f(0x101))[_0x67821f(0xe6)](/=/g, _0x67821f(0x152)),
        _0x5b3659 = document['getElementById']('logicand')[_0x67821f(0x10e)][_0x67821f(0xc9)](/\n|,/g, '\x20&&\x20')['replace'](/=/g, _0x67821f(0x152)),
        _0xc27b86 = document[_0x67821f(0x12e)](_0x67821f(0x162))['value'][_0x67821f(0xc9)](/\n|,/g, '\x20&&\x20')[_0x67821f(0xe6)](/=/g, _0x67821f(0x152)),
        _0x6df11d = _0x3b9eeb[_0x67821f(0xc9)](/\s&&\s/g, _0x67821f(0x150))[_0x67821f(0xc9)](/\s\|\|\s/g, _0x67821f(0x118)),
        _0x5e59fd = _0x5b3659[_0x67821f(0xc9)](/\s&&\s/g, _0x67821f(0x150))[_0x67821f(0xc9)](/\s\|\|\s/g, _0x67821f(0x118)),
        _0x4b65b1 = _0xc27b86[_0x67821f(0xc9)](/\s&&\s/g, _0x67821f(0x150))[_0x67821f(0xc9)](/\s\|\|\s/g, _0x67821f(0x118)); if (_0x3b9eeb == '') var _0x5b72f4 = 'Mandate\x20field\x20is\x20Must';
    else { if (_0x5b3659 == '' && _0xc27b86 == '') var _0x5b72f4 = _0x6df11d + '\x22)';
        else { if (_0xc27b86 == '') var _0x5b72f4 = _0x6df11d + '\x22)\x20&&\x20' + _0x5e59fd + '\x22)';
            else { if (_0x5b3659 == '') var _0x5b72f4 = _0x6df11d + _0x67821f(0x118) + _0x4b65b1 + '\x22)';
                else var _0x5b72f4 = _0x6df11d + _0x67821f(0x150) + _0x5e59fd + _0x67821f(0x118) + _0x4b65b1 + '\x22)'; } } } var _0x162321 = _0x5b72f4[_0x67821f(0xc9)](/\)\"\)/g, '\x22))')[_0x67821f(0xc9)](/\)\"\)\)/g, _0x67821f(0xfc))[_0x67821f(0xc9)](/\)\"\)\)\)/g, '\x22))))')[_0x67821f(0xc9)](/\b\s+\"|\"\s\b/g, '\x22')[_0x67821f(0xc9)](/!\s==/g, '\x20!=\x20')[_0x67821f(0xc9)](/\"\s|\s\"/g, '\x22')[_0x67821f(0xc9)](/\./g, '\x5c.')[_0x67821f(0xc9)](/\s&&\"\)/g, '')[_0x67821f(0xc9)](/iregex\(\"null\"\)/g, 'null');
    document[_0x67821f(0x12e)]('build')[_0x67821f(0xed)] = _0x162321; }

function evlogs() { var _0x576374 = _0x113e; let _0x380238 = document[_0x576374(0x117)](_0x576374(0x115));
    _0x380238[_0x576374(0x15b)]('change', () => { var _0x56be7e = _0x576374; let _0x12b6bf = _0x380238[_0x56be7e(0x116)]; if (_0x12b6bf[_0x56be7e(0x11b)] == 0x0) return; const _0x38ad0d = _0x12b6bf[0x0]; if (Math[_0x56be7e(0x12b)](_0x38ad0d['size'] / 0x100000) < 0xa) { let _0x4d50eb = new FileReader();
            _0x4d50eb[_0x56be7e(0xd6)](_0x38ad0d), _0x4d50eb[_0x56be7e(0x140)] = _0x68d6f8 => { var _0x2bb9d7 = _0x56be7e; const _0x290002 = _0x68d6f8[_0x2bb9d7(0xe1)][_0x2bb9d7(0x148)]; var _0x192c45 = _0x290002; if (_0x192c45[_0x2bb9d7(0xeb)]('InstanceID')) { var _0x58d4f9 = { 'A\x20service\x20was\x20installed\x20in\x20the\x20system': '<span\x20class=\x22logsuccess\x22>A\x20service\x20was\x20installed\x20in\x20the\x20system</span>', 'The\x20Infocyte\x20HUNT\x20Agent\x20service\x20is\x20marked\x20as\x20an\x20interactive\x20service.': '<span\x20class=\x22logwarning\x22>The\x20Infocyte\x20HUNT\x20Agent\x20service\x20is\x20marked\x20as\x20an\x20interactive\x20service</span>', 'The\x20Infocyte\x20HUNT\x20Agent\x20service\x20terminated\x20unexpectedly.': '<span\x20class=\x22logdanger\x22>The\x20Infocyte\x20HUNT\x20Agent\x20service\x20terminated\x20unexpectedly.</span>' }; let _0x5da25f = Object[_0x2bb9d7(0x153)](_0x58d4f9); var _0x1fb8ce = JSON[_0x2bb9d7(0x135)](_0x5da25f)[_0x2bb9d7(0xe6)](/,/g, '|')[_0x2bb9d7(0xe6)](/\[|\]|\"/g, ''),
                        _0x482683 = new RegExp(_0x1fb8ce, 'gi');
                    finalevlogs = _0x192c45['replace'](_0x482683, _0x29645b => _0x58d4f9[_0x29645b]), document[_0x2bb9d7(0x12e)]('results')[_0x2bb9d7(0xed)] = finalevlogs; } else alert(_0x2bb9d7(0xd2)), window[_0x2bb9d7(0x138)]['reload'](); }, _0x4d50eb['onerror'] = _0x2e66a8 => alert(_0x2e66a8[_0x56be7e(0xe1)][_0x56be7e(0x165)]['name']); } else alert(_0x56be7e(0x14c)), window[_0x56be7e(0x138)]['reload'](); }); }

function alogs() { var _0xce22e0 = _0x113e; let _0x1f8b2f = document[_0xce22e0(0x117)](_0xce22e0(0xe2));
    _0x1f8b2f[_0xce22e0(0x15b)](_0xce22e0(0x15c), () => { var _0x117351 = _0xce22e0; let _0x59a0e1 = _0x1f8b2f[_0x117351(0x116)]; if (_0x59a0e1[_0x117351(0x11b)] == 0x0) return; const _0x233e9a = _0x59a0e1[0x0]; if (Math[_0x117351(0x12b)](_0x233e9a[_0x117351(0xd5)] / 0x100000) < 0xa) { let _0x1a9980 = new FileReader();
            _0x1a9980[_0x117351(0xd6)](_0x233e9a), _0x1a9980[_0x117351(0x140)] = _0x2d307b => { var _0x3afdc3 = _0x117351,
                    _0x47e71d = _0x2d307b[_0x3afdc3(0xe1)][_0x3afdc3(0x148)][_0x3afdc3(0xe6)](/,/g, ''),
                    _0x29f69b = _0x47e71d[_0x3afdc3(0x161)](/\r\n|\n/),
                    _0x273645 = _0x29f69b[_0x3afdc3(0x127)](',')[_0x3afdc3(0xe6)](/,/g, _0x3afdc3(0x158)); if (_0x273645[_0x3afdc3(0xeb)](_0x3afdc3(0x149))) { var _0x28b978 = { 'Agent\x20has\x20started': '<span\x20class=\x22logsuccess\x20loginfoh\x22>Agent\x20has\x20started</span>', 'Starting\x20as\x20windows\x20service': _0x3afdc3(0x113), 'Results\x20sent\x20scan\x20is\x20complete': _0x3afdc3(0x12a), 'Found\x20matches!': _0x3afdc3(0x15a), 'Yara\x20scan\x20completed.': '<span\x20class=\x22logsuccess\x22>Yara\x20scan\x20completed.</span>', 'Result=Good.': _0x3afdc3(0x155), 'Cannot\x20execute\x20jobs:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url': _0x3afdc3(0xc8), 'Service\x20stop\x20signal\x20received.': _0x3afdc3(0xdb), 'Cannot\x20save\x20RTS\x20data:\x20unable\x20to\x20open\x20database\x20file': '<span\x20class=\x22logdanger\x22>Cannot\x20save\x20RTS\x20data:\x20unable\x20to\x20open\x20database\x20file</span>', 'Received\x20stop\x20signal\x20from\x20service\x20controller': _0x3afdc3(0x10c), 'error\x20notifying\x20wait\x20possible\x20future\x20leak': _0x3afdc3(0x111), 'Unable\x20to\x20put\x20data:\x20error\x20sending\x20request\x20for\x20url': _0x3afdc3(0xee), 'unable\x20to\x20open\x20database\x20file': _0x3afdc3(0x134), 'Cannot\x20finish\x20fetching\x20user\x20accounts:': _0x3afdc3(0xfe), 'Error\x20communicating\x20with\x20API:\x20Unable\x20to\x20post\x20data:\x20error\x20sending\x20request\x20for\x20url': _0x3afdc3(0xf6), 'Result=Suspicious.': '<span\x20class=\x22logdanger\x22>Result=Suspicious.</span>', 'Extension\x20Error:': '<span\x20class=\x22logdanger\x22>Extension\x20Error:</span>', 'callback\x20error:': '<span\x20class=\x22logdanger\x22>callback\x20error:</span>', 'runtime\x20error:': _0x3afdc3(0xef), 'cannot\x20be\x20accessed': _0x3afdc3(0x151), 'Signal\x20received\x20to\x20stop\x20in-progress\x20inspection': '<span\x20class=\x22logdanger\x22>Signal\x20received\x20to\x20stop\x20in-progress\x20inspection</span>', 'Cannot\x20wait\x20for\x20upload\x20authorization': _0x3afdc3(0x142), 'Could\x20not\x20prune\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp': '<span\x20class=\x22logdanger\x22>Could\x20not\x20prune\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp</span>', 'Could\x20not\x20merge\x20temp\x20records:\x20no\x20such\x20table:\x20event_temp': _0x3afdc3(0x100), 'no\x20such\x20table:\x20user_temp': _0x3afdc3(0x124), 'no\x20such\x20table:\x20memscan_temp': _0x3afdc3(0xde), 'Setting\x20RTS\x20status\x20to\x20disabled': '<span\x20class=\x22logdanger\x22>Setting\x20RTS\x20status\x20to\x20disabled</span>', 'Cannot\x20get\x20processes\x20from\x20system\x20information': _0x3afdc3(0x145), 'os\x20error\x2010051': _0x3afdc3(0xcc), 'os\x20error\x2010060': _0x3afdc3(0xf2), 'os\x20error\x2010054': _0x3afdc3(0xe8), 'os\x20error\x2010061': _0x3afdc3(0x13b), 'os\x20error\x201450': '<span\x20class=\x22oserror1450\x20loginfoh\x22>os\x20error\x201450</span>', 'os\x20error\x20104': _0x3afdc3(0x128), 'Lua\x20string': _0x3afdc3(0xf3), 'RTS\x20Enabled': '<span\x20class=\x22logwarning\x22>RTS\x20Enabled</span>', 'Enabling\x20RTS': _0x3afdc3(0x10a), 'Notifying\x20service\x20controller\x20that\x20HUNT\x20Agent\x20is\x20shutting\x20down': _0x3afdc3(0xea), 'Cannot\x20initialize\x20package\x20manager': _0x3afdc3(0x136), 'Enumerating\x20running\x20processes': _0x3afdc3(0x119), 'Enumerating\x20drivers': _0x3afdc3(0xe0), 'Enumerating\x20autostart\x20locations': '<span\x20class=\x22logprimary\x22>Enumerating\x20autostart\x20locations</span>', 'Enumerating\x20processes': _0x3afdc3(0xfb), 'Enumerating\x20users': _0x3afdc3(0x12d), 'System\x20inspections\x20complete': _0x3afdc3(0x167), 'Run\x20keys': _0x3afdc3(0x11d), 'AppInit_DLLs': _0x3afdc3(0x15e), 'WMI\x20Persistence': _0x3afdc3(0x139), 'Services': '<span\x20class=\x22logprimary\x22>Services</span>', 'Accessibility\x20features': _0x3afdc3(0x144), 'Files': _0x3afdc3(0xcf), 'Collecting\x20important\x20events': '<span\x20class=\x22logprimary\x22>Collecting\x20important\x20events</span>', 'Getting\x20installed\x20application\x20list': _0x3afdc3(0x112), 'Matched\x20yara\x20rule': _0x3afdc3(0x123) }; let _0x4f73db = Object[_0x3afdc3(0x153)](_0x28b978); var _0x38ac66 = JSON['stringify'](_0x4f73db)['replace'](/,/g, '|')[_0x3afdc3(0xe6)](/\[|\]|\"/g, ''),
                        _0x4b24d7 = new RegExp(_0x38ac66, 'gi');
                    finalalogs = _0x273645[_0x3afdc3(0xe6)](_0x4b24d7, _0x7fc0d1 => _0x28b978[_0x7fc0d1]), finalalogs[_0x3afdc3(0xeb)](_0x3afdc3(0x109)) ? (finalalogs = finalalogs[_0x3afdc3(0xe6)](/tzone:[a-zA-Z/_]{0,50}/g, _0x3afdc3(0x13e)), document[_0x3afdc3(0x12e)](_0x3afdc3(0xcb))['innerHTML'] = finalalogs[_0x3afdc3(0xe6)](/\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{1,12}\sUTC/g, _0x3afdc3(0x13e))) : document[_0x3afdc3(0x12e)](_0x3afdc3(0xcb))[_0x3afdc3(0xed)] = finalalogs['replace'](/\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{1,12}\sUTC/g, _0x3afdc3(0x14e)); } else alert(_0x3afdc3(0xdc)), window[_0x3afdc3(0x138)][_0x3afdc3(0x114)](); }, _0x1a9980['onerror'] = _0x7c829b => alert(_0x7c829b['target'][_0x117351(0x165)][_0x117351(0x159)]); } else alert('Keeping\x20browser\x20health\x20in\x20mind,\x20file\x20upload\x20size\x20is\x20restricted\x20to\x2010Meg'), window[_0x117351(0x138)][_0x117351(0x114)](); }); }

function clogs() { var _0x16f36c = _0x113e; let _0x5e2c5c = document[_0x16f36c(0x117)](_0x16f36c(0x132));
    _0x5e2c5c[_0x16f36c(0x15b)]('change', () => { var _0x2dbeea = _0x16f36c; let _0x2765ca = _0x5e2c5c['files']; if (_0x2765ca[_0x2dbeea(0x11b)] == 0x0) return; const _0x23d35b = _0x2765ca[0x0]; if (Math['round'](_0x23d35b[_0x2dbeea(0xd5)] / 0x100000) < 0xa) { let _0x358eb9 = new FileReader();
            _0x358eb9[_0x2dbeea(0xd6)](_0x23d35b), _0x358eb9[_0x2dbeea(0x140)] = _0x938685 => { var _0x8cabaa = _0x2dbeea,
                    _0x1b5062 = _0x938685[_0x8cabaa(0xe1)][_0x8cabaa(0x148)]; if (_0x1b5062['includes'](_0x8cabaa(0x143)) || _0x1b5062[_0x8cabaa(0xeb)](_0x8cabaa(0xf4)) || _0x1b5062['includes'](_0x8cabaa(0x131)) || _0x1b5062[_0x8cabaa(0xeb)](_0x8cabaa(0x121))) { var _0x54f34e = { 'Starting\x20Subscribers': '<span\x20class=\x22logsuccess\x22>Starting\x20Subscribers</span>', 'Access\x20Check:\x20SUCCEEDED!': _0x8cabaa(0x13d), 'Jobs\x20loaded\x20successfully': '<span\x20class=\x22logsuccess\x22>Jobs\x20loaded\x20successfully</span>', 'Target\x20is\x20live\x20and\x20accessible': '<span\x20class=\x22logsuccess\x22>Target\x20is\x20live\x20and\x20accessible</span>', 'Target\x20is\x20live': _0x8cabaa(0xfd), 'Successfully\x20EXECUTED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe': '<span\x20class=\x22logsuccess\x22>Successfully\x20EXECUTED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe</span>', 'Attempting\x20transfer\x20agent\x20to\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe': _0x8cabaa(0x11c), 'Successfully\x20TRANSFERRED\x20c:\x5cwindows\x5ctemp\x5cinfocyte.exe': _0x8cabaa(0xdf), 'Running\x20with\x20args:\x20\x20--url\x20https://askpentest.infocyte.com\x20--auth\x20f8861d03-1a63-4344-bb01-67e6bc676f77\x20--no-install': _0x8cabaa(0xf8), 'Connection\x20to\x20Infocyte\x20API\x20restored!': _0x8cabaa(0x156), 'PSRemote\x20Transfers\x20may\x20have\x20issues\x20unless\x20you\x20install\x20Powershell': _0x8cabaa(0x14f), 'might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group': _0x8cabaa(0xdd), 'Heartbeat\x20Rejected:\x20Server\x20responded\x20with\x20code\x20Unauthorized:': _0x8cabaa(0xd7), 'No\x20Response\x20to\x20Heartbeat:\x20An\x20error\x20occurred\x20while\x20sending\x20the\x20request': _0x8cabaa(0xe9), 'Access\x20Check\x20FAILED.': '<span\x20class=\x22logdanger\x22>Access\x20Check\x20FAILED.</span>', 'Access\x20is\x20denied.': _0x8cabaa(0x15f), 'Unable\x20to\x20connect\x20to\x20the\x20remote\x20server': '<span\x20class=\x22logdanger\x22>Unable\x20to\x20connect\x20to\x20the\x20remote\x20server</span>', 'Host\x20may\x20not\x20exist': _0x8cabaa(0x137), 'Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20but\x20was\x20registered\x20in\x20DNS': _0x8cabaa(0x122), 'Requested\x20registry\x20access\x20is\x20not\x20allowed.': _0x8cabaa(0x160), 'No\x20such\x20host\x20is\x20known': _0x8cabaa(0xce), 'The\x20network\x20path\x20was\x20not\x20found': _0x8cabaa(0xf7), 'Discovery:\x20Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20and\x20failed\x20DNS\x20resolution.\x20Target\x20MAY\x20NOT\x20EXIST\x20on\x20this\x20network': '<span\x20class=\x22logdanger\x22>Discovery:\x20Target\x20did\x20not\x20respond\x20to\x20any\x20probes\x20and\x20failed\x20DNS\x20resolution.\x20Target\x20MAY\x20NOT\x20EXIST\x20on\x20this\x20network</span>', 'An\x20error\x20occurred\x20while\x20sending\x20the\x20request..\x20The\x20request\x20failed\x20due\x20to\x20an\x20underlying\x20issue\x20such\x20as\x20network\x20connectivity\x20or\x20DNS\x20failure': _0x8cabaa(0xe5), 'INACCESSIBLE': _0x8cabaa(0xd8), 'Access\x20denied!': '<span\x20class=\x22logdanger\x22>Access\x20denied!</span>', 'Permission\x20denied': '<span\x20class=\x22logdanger\x22>Permission\x20denied</span>', 'Stopping\x20Subscribers': '<span\x20class=\x22logdanger\x22>Stopping\x20Subscribers</span>', 'All\x20transport\x20options\x20failed': _0x8cabaa(0xe4), 'SMB\x20<Transport>:\x20Could\x20not\x20get\x20agentId\x20via\x20Remote\x20Registry\x20Service.': _0x8cabaa(0x129), '0x800706BA': _0x8cabaa(0x12c) }; let _0x5d318a = Object['keys'](_0x54f34e); var _0x429836 = JSON[_0x8cabaa(0x135)](_0x5d318a)['replace'](/,/g, '|')[_0x8cabaa(0xe6)](/\[|\]|\"/g, ''),
                        _0x34781e = new RegExp(_0x429836, 'gi');
                    finalclogs = _0x1b5062[_0x8cabaa(0xe6)](_0x34781e, _0x276c87 => _0x54f34e[_0x276c87]), document[_0x8cabaa(0x12e)](_0x8cabaa(0xcb))[_0x8cabaa(0xed)] = finalclogs[_0x8cabaa(0xe6)](/<Transport>/g, _0x8cabaa(0xff))[_0x8cabaa(0xe6)](/<None>/g, _0x8cabaa(0xe3)); } else alert(_0x8cabaa(0x164)), window['location'][_0x8cabaa(0x114)](); }, _0x358eb9[_0x2dbeea(0xd4)] = _0x5eb423 => alert(_0x5eb423['target'][_0x2dbeea(0x165)][_0x2dbeea(0x159)]); } else alert(_0x2dbeea(0x14c)), window[_0x2dbeea(0x138)][_0x2dbeea(0x114)](); }); }

function guilogs() { var _0x53aba7 = _0x113e;
    document[_0x53aba7(0x12e)]('guilogs')[_0x53aba7(0xec)] = _0x53aba7(0xf9); }

function gui() { var _0x51912a = _0x113e;
    document[_0x51912a(0x12e)](_0x51912a(0x11f))[_0x51912a(0xec)] = _0x51912a(0x168), document[_0x51912a(0x12e)](_0x51912a(0xe7))[_0x51912a(0xed)] = 'GUI\x20Logs\x20selected:\x20'; var _0x553d48 = event[_0x51912a(0x10d)][_0x51912a(0x108)](_0x51912a(0xfa))[_0x51912a(0xe6)](/Timeline|[A-Z]{3}\s\d{1,2}|\d{1,2}:\d\d:\d\d\s(a|p)m/g, ''),
        _0x2356e0 = { 'Completed': _0x51912a(0xcd), 'Incyte\x20job\x20check\x20-\x20completed!': _0x51912a(0x13a), 'Incyte:\x20Finished\x20enrichment\x20data\x20load': '<span\x20class=\x22logsuccess\x22>Incyte:\x20Finished\x20enrichment\x20data\x20load</span>', 'Finished\x20database\x20load': _0x51912a(0xd0), 'Heartbeat': _0x51912a(0x13c), 'Executing\x20via\x20agent': '<span\x20class=\x22logwarning\x22>Executing\x20via\x20agent</span>', 'might\x20be\x20a\x20duplicate\x20host\x20entry\x20in\x20Target\x20Group': _0x51912a(0xdd), 'Failed:\x20Abandoned\x20data\x20load': _0x51912a(0x130), 'Failed:\x20At\x20least\x20300s\x20since\x20last\x20heartbeat': '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/360040640871-What-does-Failed-At-least-300s-since-last-heartbeat-mean-\x22\x20target=\x22_blank\x22>Failed:\x20At\x20least\x20300s\x20since\x20last\x20heartbeat</a></span>', 'Failed:\x20At\x20least\x20600s\x20since\x20attempting\x20upload': '<span><a\x20class=\x22logdanger\x22\x20href=\x22https://support.infocyte.com/hc/en-us/articles/360040640871-What-does-Failed-At-least-300s-since-last-heartbeat-mean-\x22\x20target=\x22_blank\x22>Failed:\x20At\x20least\x20600s\x20since\x20attempting\x20upload</a></span>', 'Survey\x20completed\x20in\x20': _0x51912a(0x11a) }; let _0x4b0b0b = Object[_0x51912a(0x153)](_0x2356e0); var _0x20bb81 = JSON[_0x51912a(0x135)](_0x4b0b0b)['replace'](/,/g, '|')[_0x51912a(0xe6)](/\[|\]|\"/g, ''),
        _0x33afa7 = new RegExp(_0x20bb81, 'gi'); if (_0x553d48[_0x51912a(0xeb)](_0x51912a(0x11e))) var _0x5096bb = _0x553d48[_0x51912a(0x102)](/by\scontroller\s.([^\s]+)/g)[0x0][_0x51912a(0x161)]('\x20')[0x2];
    else { if (_0x553d48[_0x51912a(0xeb)](_0x51912a(0x14a))) var _0x5096bb = _0x553d48[_0x51912a(0x102)](/on\shost\s.([^\s]+)/g)[0x0][_0x51912a(0x161)]('\x20')[0x2];
        else { if (_0x553d48[_0x51912a(0xeb)]('host-access\x20job\x20fetched\x20by\x20controller')) var _0x5096bb = _0x553d48[_0x51912a(0x102)](/enrichment\sof\s.([^\s]+)/g)[0x0][_0x51912a(0x161)]('\x20')[0x2];
            else var _0x5096bb = 'Unknown'; } }
    guiresult = _0x553d48['replace'](_0x33afa7, _0xc19348 => _0x2356e0[_0xc19348]), document[_0x51912a(0x12e)]('results')[_0x51912a(0xed)] = _0x51912a(0x13f) + _0x5096bb + '</span></h3>' + guiresult; }